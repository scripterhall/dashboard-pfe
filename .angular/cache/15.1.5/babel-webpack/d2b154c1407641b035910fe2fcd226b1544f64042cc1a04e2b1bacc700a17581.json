{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/sprint.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/datepicker\";\nimport * as i8 from \"@angular/material/button\";\nfunction AjouterSprintFormComponent_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"L'objectif est requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterSprintFormComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"La date de lancement est requise\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterSprintFormComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"La date de fin est requise\");\n    i0.ɵɵelementEnd();\n  }\n}\nvar AjouterSprintFormComponent = /** @class */function () {\n  function AjouterSprintFormComponent(fb, sprintService, dialogRef, data) {\n    this.fb = fb;\n    this.sprintService = sprintService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.clickCount = 0;\n  }\n  AjouterSprintFormComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  // onSave() {\n  //   const formData = this.form.value;\n  //   this.sprintService.createSprint(formData).subscribe(\n  //     response => {\n  //       console.log('Sprint ajouté avec succès.');\n  //       console.log(formData);\n  //       this.move();\n  //       location.reload();\n  //       this.dialogRef.close();\n  //     },\n  //     error => {\n  //       console.error(\"Erreur d'enregistrement du sprint ! : \", error);\n  //     }\n  //   );\n  // }\n  AjouterSprintFormComponent.prototype.onSave = function () {\n    var _this = this;\n    var productBacklogId = 1;\n    // const sprint = new Sprint();\n    // sprint.objectif = this.form.get('objectif').value;\n    // sprint.date_lancement = this.form.get('date_lancement').value;\n    // sprint.date_fin = this.form.get('date_fin').value;\n    // this.sprintService.createSprint(sprint, productBacklogId).subscribe(\n    //   createdSprint => {\n    //     console.log('Sprint créé avec succès :', createdSprint);\n    //     this.dialogRef.close();\n    //   },\n    //   error => {\n    //     console.error('Erreur lors de la création du sprint :', error);\n    //   }\n    // );\n    var formData = this.form.value;\n    this.sprintService.createSprint(formData, productBacklogId).subscribe(function (response) {\n      console.log('Sprint ajouté avec succès.');\n      console.log(formData);\n      _this.move();\n      // location.reload();\n      _this.dialogRef.close();\n    }, function (error) {\n      console.error(\"Erreur d'enregistrement du sprint ! : \", error);\n    });\n  };\n  AjouterSprintFormComponent.prototype.move = function () {\n    this.clickCount++;\n  };\n  AjouterSprintFormComponent.prototype.ngOnInit = function () {\n    this.form = this.fb.group({\n      objectif: ['', Validators.required],\n      date_lancement: [null, Validators.required],\n      date_fin: [null, Validators.required]\n    });\n  };\n  AjouterSprintFormComponent.ɵfac = function AjouterSprintFormComponent_Factory(t) {\n    return new (t || AjouterSprintFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SprintService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  AjouterSprintFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AjouterSprintFormComponent,\n    selectors: [[\"app-ajouter-sprint-form\"]],\n    decls: 21,\n    vars: 9,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"formControlName\", \"objectif\", \"placeholder\", \"Objectif\", \"required\", \"\"], [4, \"ngIf\"], [\"type\", \"date\", \"matInput\", \"\", \"formControlName\", \"date_lancement\", \"placeholder\", \"Date de lancement\", \"required\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", \"type\", \"date\", \"formControlName\", \"date_fin\", \"placeholder\", \"Date de fin\", \"required\", \"\", 3, \"matDatepicker\"], [\"picker2\", \"\"], [1, \"button-group\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"]],\n    template: function AjouterSprintFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AjouterSprintFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSave();\n        });\n        i0.ɵɵelementStart(1, \"mat-form-field\");\n        i0.ɵɵelement(2, \"input\", 1);\n        i0.ɵɵtemplate(3, AjouterSprintFormComponent_mat_error_3_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-form-field\");\n        i0.ɵɵelement(5, \"input\", 3)(6, \"mat-datepicker-toggle\", 4)(7, \"mat-datepicker\", null, 5);\n        i0.ɵɵtemplate(9, AjouterSprintFormComponent_mat_error_9_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\");\n        i0.ɵɵelement(11, \"input\", 6)(12, \"mat-datepicker-toggle\", 4)(13, \"mat-datepicker\", null, 7);\n        i0.ɵɵtemplate(15, AjouterSprintFormComponent_mat_error_15_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"button\", 9);\n        i0.ɵɵtext(18, \"Enregistrer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function AjouterSprintFormComponent_Template_button_click_19_listener() {\n          return ctx.dialogRef.close();\n        });\n        i0.ɵɵtext(20, \"Annuler\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        var _r1 = i0.ɵɵreference(8);\n        var _r3 = i0.ɵɵreference(14);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"objectif\").invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"date_lancement\").invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matDatepicker\", _r3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r3);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"date_fin\").invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i5.MatInput, i6.MatFormField, i6.MatError, i6.MatSuffix, i7.MatDatepicker, i7.MatDatepickerInput, i7.MatDatepickerToggle, i8.MatButton]\n  });\n  return AjouterSprintFormComponent;\n}();\nexport { AjouterSprintFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}