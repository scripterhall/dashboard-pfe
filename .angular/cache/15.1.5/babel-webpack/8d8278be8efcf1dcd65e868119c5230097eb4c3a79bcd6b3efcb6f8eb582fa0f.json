{"ast":null,"code":"import { moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { ToastrService } from 'ngx-toastr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/cdk/drag-drop\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/sidenav\";\nfunction NotificationsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"mat-icon\", 5);\n    i0.ɵɵtext(2, \"drag_indicator\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 13)(4, \"h3\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var task_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(task_r6.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r6.description);\n  }\n}\nfunction NotificationsComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"mat-icon\", 5);\n    i0.ɵɵtext(2, \"drag_indicator\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 13)(4, \"h3\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var task_r7 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(task_r7.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r7.description);\n  }\n}\nfunction NotificationsComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"mat-icon\", 5);\n    i0.ɵɵtext(2, \"drag_indicator\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 13)(4, \"h3\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var task_r8 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(task_r8.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r8.description);\n  }\n}\nvar NotificationsComponent = /** @class */function () {\n  function NotificationsComponent(toastr) {\n    this.toastr = toastr;\n    this.staticAlertClosed = false;\n    this.staticAlertClosed1 = false;\n    this.staticAlertClosed2 = false;\n    this.staticAlertClosed3 = false;\n    this.staticAlertClosed4 = false;\n    this.staticAlertClosed5 = false;\n    this.staticAlertClosed6 = false;\n    this.staticAlertClosed7 = false;\n    this.todo = [{\n      title: 'Task 1',\n      description: 'Lorem ipsum dolor sit amet'\n    }, {\n      title: 'Task 2',\n      description: 'consectetur adipiscing elit'\n    }, {\n      title: 'Task 3',\n      description: 'sed do eiusmod tempor incididunt ut labore'\n    }];\n    this.inProgress = [{\n      title: 'Task 4',\n      description: 'Ut enim ad minim veniam'\n    }, {\n      title: 'Task 5',\n      description: 'quis nostrud exercitation ullamco laboris'\n    }];\n    this.done = [{\n      title: 'Task 6',\n      description: 'nisi ut aliquip ex ea commodo consequat'\n    }, {\n      title: 'Task 7',\n      description: 'Duis aute irure dolor in reprehenderit'\n    }, {\n      title: 'Task 8',\n      description: 'Excepteur sint occaecat cupidatat non proident'\n    }];\n  }\n  NotificationsComponent.prototype.onDrop = function (event, columnName) {\n    if (event.previousContainer === event.container) {\n      // Réorganiser les éléments dans le même tableau\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      // Déplacer l'élément vers un autre tableau\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n    // Enregistrer les changements dans la base de données\n    // this.saveTask(event.item.data, columnName);\n  };\n\n  NotificationsComponent.prototype.ngOnInit = function () {};\n  NotificationsComponent.ɵfac = function NotificationsComponent_Factory(t) {\n    return new (t || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.ToastrService));\n  };\n  NotificationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationsComponent,\n    selectors: [[\"app-notifications\"]],\n    decls: 29,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"scrum-board\"], [\"mode\", \"side\", \"position\", \"start\", \"todo\", \"\", 1, \"scrum-column\"], [\"drawer\", \"\"], [\"color\", \"primary\"], [1, \"drag-handle\"], [1, \"column-title\"], [\"cdkDropList\", \"\", 1, \"scrum-list\", 3, \"cdkDropListDropped\"], [\"class\", \"scrum-item\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"mode\", \"side\", \"position\", \"start\", \"inprogress\", \"\", 1, \"scrum-column\"], [\"color\", \"accent\"], [\"mode\", \"side\", \"position\", \"start\", \"done\", \"\", 1, \"scrum-column\"], [\"cdkDrag\", \"\", 1, \"scrum-item\"], [1, \"scrum-content\"]],\n    template: function NotificationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-drawer-container\", 1)(2, \"mat-drawer\", 2, 3)(4, \"mat-toolbar\", 4)(5, \"mat-icon\", 5);\n        i0.ɵɵtext(6, \"drag_indicator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"span\", 6);\n        i0.ɵɵtext(8, \"To Do\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵlistener(\"cdkDropListDropped\", function NotificationsComponent_Template_div_cdkDropListDropped_9_listener($event) {\n          return ctx.onDrop($event, \"todo\");\n        });\n        i0.ɵɵtemplate(10, NotificationsComponent_div_10_Template, 8, 2, \"div\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-drawer\", 9, 3)(13, \"mat-toolbar\", 10)(14, \"mat-icon\", 5);\n        i0.ɵɵtext(15, \"drag_indicator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"span\", 6);\n        i0.ɵɵtext(17, \"In Progress\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 7);\n        i0.ɵɵlistener(\"cdkDropListDropped\", function NotificationsComponent_Template_div_cdkDropListDropped_18_listener($event) {\n          return ctx.onDrop($event, \"inprogress\");\n        });\n        i0.ɵɵtemplate(19, NotificationsComponent_div_19_Template, 8, 2, \"div\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"mat-drawer\", 11, 3)(22, \"mat-toolbar\", 4)(23, \"mat-icon\", 5);\n        i0.ɵɵtext(24, \"drag_indicator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"span\", 6);\n        i0.ɵɵtext(26, \"Done\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 7);\n        i0.ɵɵlistener(\"cdkDropListDropped\", function NotificationsComponent_Template_div_cdkDropListDropped_27_listener($event) {\n          return ctx.onDrop($event, \"done\");\n        });\n        i0.ɵɵtemplate(28, NotificationsComponent_div_28_Template, 8, 2, \"div\", 8);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.todo);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.done);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.inProgress);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.MatToolbar, i4.CdkDropList, i4.CdkDrag, i5.MatIcon, i6.MatDrawer, i6.MatDrawerContainer],\n    styles: [\".scrum-board[_ngcontent-%COMP%] {\\n  display: flex;\\n  height: 100%;\\n  width: 100%;\\n  background-color: #121212;\\n}\\n\\n.scrum-column[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 33.3%;\\n  height: 100%;\\n}\\n\\n.scrum-column[_ngcontent-%COMP%]   mat-toolbar[_ngcontent-%COMP%] {\\n  height: 64px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.column-title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: bold;\\n  margin-left: 8px;\\n  color: #fff;\\n}\\n\\n.drag-handle[_ngcontent-%COMP%] {\\n  cursor: move;\\n  color: #fff;\\n}\\n\\n.scrum-list[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  overflow-y: auto;\\n  flex-grow: 1;\\n  background-color: #1f1f1f;\\n  border-radius: 8px;\\n}\\n\\n.scrum-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 8px;\\n  margin-bottom: 8px;\\n  background-color: #292929;\\n  border-radius: 8px;\\n}\\n\\n.scrum-content[_ngcontent-%COMP%] {\\n  margin-left: 8px;\\n  color: #fff;\\n}\\n\\n.scrum-content[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 16px;\\n  font-weight: bold;\\n}\\n\\n.scrum-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 14px;\\n}\"]\n  });\n  return NotificationsComponent;\n}();\nexport { NotificationsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}