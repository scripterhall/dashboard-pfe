{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CdkDropList, moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Component, ElementRef, HostBinding, ViewChild } from \"@angular/core\";\nimport { HistoireTicketService } from \"src/app/service/histoire-ticket.service\";\nimport { SprintService } from \"src/app/service/sprint.service\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { AjouterTicketHistoireFormComponent } from \"../ajouter-ticket-histoire-form/ajouter-ticket-histoire-form.component\";\nimport { AjouterSprintFormComponent } from \"../ajouter-sprint-form/ajouter-sprint-form.component\";\nimport { MembreService } from \"src/app/service/membre.service\";\nimport { ProductBacklogService } from \"src/app/service/product-backlog.service\";\nimport { ConfirmDialogComponent } from \"../confirm-dialog/confirm-dialog.component\";\nvar updateTicketPositionUrl = \"http://localhost:9999/gestion-histoire-ticket/histoireTickets/position\";\nvar IconsComponent = /** @class */function () {\n  function IconsComponent(histoireTicketService, httpClient, sprintService, dialog, membreService, productBacklogService) {\n    this.histoireTicketService = histoireTicketService;\n    this.httpClient = httpClient;\n    this.sprintService = sprintService;\n    this.dialog = dialog;\n    this.membreService = membreService;\n    this.productBacklogService = productBacklogService;\n    this.elementCreated = false;\n    this.fadeOut = false;\n    this.clickCount = 0;\n  }\n  // drop(event: CdkDragDrop<TicketHistoire[]>) {\n  //     const ticketId = event.previousContainer.data[event.previousIndex].id; // récupère l'ID du ticket\n  //     const newPosition = event.currentIndex; // récupère la nouvelle position\n  //     console.log(\"id = \"+ticketId+\", new Position = \"+newPosition);\n  //     this.httpClient.put(updateTicketPositionUrl, { id: ticketId, position: newPosition })\n  //       .subscribe(\n  //         response => console.log('Position updated successfully!'),\n  //         error => console.error('Error updating position: ', error)\n  //       );\n  //     transferArrayItem(event.previousContainer.data,\n  //                       event.container.data,\n  //                       event.previousIndex,\n  //                       event.currentIndex);\n  // }\n  IconsComponent.prototype.drop = function (event) {\n    var ticketId = event.previousContainer.data[event.previousIndex].id; // récupère l'ID du ticket\n    var newPosition = event.currentIndex; // récupère la nouvelle position\n    // Si l'élément est déposé sur le premier tableau\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      console.log(\"id = \" + ticketId + \", new Position = \" + newPosition);\n      this.httpClient.put(updateTicketPositionUrl, {\n        id: ticketId,\n        position: newPosition\n      }).subscribe(function (response) {\n        return console.log('Position updated successfully!');\n      }, function (error) {\n        return console.error('Error updating position: ', error);\n      });\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n    // Si l'élément est déposé sur le deuxième tableau\n    else {\n      var item = event.previousContainer.data[event.previousIndex];\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n      // Mettre à jour les données ou déclencher des actions en fonction du déplacement de l'élément\n      console.log(\"Elémént déplacé: \", item);\n      // Appeler la méthode pour affecter l'histoire de ticket au product backlog\n      var productBacklogId = this.getProductBacklogByIdFromLocalStorage();\n      this.assignUserStoryToProductBacklog(item.id, productBacklogId);\n    }\n  };\n  IconsComponent.prototype.removeUserStoryFromProductBacklog = function (id) {\n    var _this = this;\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: 'Êtes-vous sûr de vouloir supprimer cet élément ?'\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      if (result) {\n        _this.histoireTicketService.removeUserStoryFromProductBacklog(id).subscribe(function (response) {\n          console.log(\"Ticket histoire supprimé avec succès.\");\n        });\n      }\n    });\n  };\n  IconsComponent.prototype.basculerElement = function () {\n    var _a;\n    this.elementCreated = !this.elementCreated;\n    if (this.elementCreated) {\n      this.detailElementRef.nativeElement.classList.remove('col-lg-12');\n      this.detailElementRef.nativeElement.classList.add('col-lg-7');\n    } else {\n      this.fadeOut = true;\n      this.detailElementRef.nativeElement.classList.remove('col-lg-7');\n      this.detailElementRef.nativeElement.classList.add('col-lg-12');\n      (_a = this.detailElementRef.nativeElement) === null || _a === void 0 ? void 0 : _a.setAttribute('[@fadeOut]');\n    }\n  };\n  IconsComponent.prototype.move = function () {\n    // this.onCreateNewSprint();\n    this.clickCount++;\n  };\n  IconsComponent.prototype.openDialog = function () {\n    var dialogRef = this.dialog.open(AjouterTicketHistoireFormComponent, {\n      width: '600px',\n      height: '300px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      console.log('The dialog was closed');\n    });\n  };\n  IconsComponent.prototype.openDialogCreateSprint = function () {\n    var dialogRef = this.dialog.open(AjouterSprintFormComponent, {\n      width: '500',\n      height: '400px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      console.log('The dialog was closed');\n    });\n  };\n  IconsComponent.prototype.getHistoireTicketsByMembreId = function (membreId) {\n    var _this = this;\n    this.membreService.getHistoireTicketsByMembreId(membreId).subscribe(function (histoireTicketsByMembreId) {\n      return _this.histoireTicketsByMembreId = histoireTicketsByMembreId;\n    });\n  };\n  IconsComponent.prototype.getHistoireTicketsByProductBacklogId = function (productBacklogId) {\n    var _this = this;\n    this.productBacklogService.getHistoireTicketsByProductBacklogId(productBacklogId).subscribe(function (histoireTicketsByProductBacklogId) {\n      return _this.histoireTicketsByProductBacklogId = histoireTicketsByProductBacklogId;\n    });\n  };\n  IconsComponent.prototype.getProjetByIdFromLocalStorage = function () {\n    var projetCourantStr = localStorage.getItem(\"projetCourant\");\n    var projetCourantObj = JSON.parse(projetCourantStr);\n    var id = projetCourantObj.id;\n    console.log(\"id projet courant = \" + id);\n    return id;\n  };\n  IconsComponent.prototype.getProductBacklogByIdFromLocalStorage = function () {\n    var productBacklogCourantStr = localStorage.getItem(\"productBacklogCourant\");\n    var productBacklogCourantObj = JSON.parse(productBacklogCourantStr);\n    var id = productBacklogCourantObj.id;\n    console.log(\"id product backlog courant = \" + id);\n    return id;\n  };\n  IconsComponent.prototype.assignUserStoryToSprint = function (histoireTicketId, sprintId) {\n    this.histoireTicketService.assignUserStoryToSprint(histoireTicketId, sprintId).subscribe(function (response) {\n      console.log('Histoire ticket affecté au sprint', response);\n    }, function (error) {\n      return console.log(error);\n    });\n  };\n  IconsComponent.prototype.assignUserStoryToProductBacklog = function (histoireTicketId, productBacklogId) {\n    this.histoireTicketService.assignUserStoryToProductBacklog(histoireTicketId, productBacklogId).subscribe(function (response) {\n      console.log('Histoire ticket affecté au product backlog avec succès', response);\n    }, function (error) {\n      return console.log(error);\n    });\n  };\n  IconsComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.getHistoireTicketsByMembreId(1);\n    this.getHistoireTicketsByProductBacklogId(this.getProductBacklogByIdFromLocalStorage());\n    this.sprintService.getListSprintsByProductBacklog(this.getProductBacklogByIdFromLocalStorage()).subscribe(function (data) {\n      _this.sprints = data;\n    });\n    this.productBacklogService.getProductBacklogByIdProjet(this.getProjetByIdFromLocalStorage()).subscribe(function (data) {\n      _this.productBacklog = data;\n      localStorage.setItem('productBacklogCourant', JSON.stringify(_this.productBacklog));\n      console.log(_this.productBacklog);\n    });\n  };\n  __decorate([ViewChild('detailElement'), __metadata(\"design:type\", ElementRef)], IconsComponent.prototype, \"detailElementRef\", void 0);\n  __decorate([ViewChild('newElement'), __metadata(\"design:type\", ElementRef)], IconsComponent.prototype, \"newElementRef\", void 0);\n  __decorate([ViewChild('doneList'), __metadata(\"design:type\", CdkDropList)], IconsComponent.prototype, \"doneList\", void 0);\n  __decorate([ViewChild('todoList'), __metadata(\"design:type\", CdkDropList)], IconsComponent.prototype, \"todoList\", void 0);\n  __decorate([HostBinding('@fadeOut'), __metadata(\"design:type\", Object)], IconsComponent.prototype, \"fadeOut\", void 0);\n  IconsComponent = __decorate([Component({\n    selector: \"app-icons\",\n    templateUrl: \"icons.component.html\",\n    styleUrls: ['./icons.component.css'],\n    animations: [trigger('fadeIn', [transition(':enter', [style({\n      opacity: 0\n    }), animate('0.5s ease-in-out', style({\n      opacity: 1\n    }))])]), trigger('fadeOut', [transition(':enter', [style({\n      width: '*'\n    }), animate('2.5s ease-in', style({\n      width: '*'\n    }))])]), trigger('slideIn', [state('in', style({\n      transform: 'translateX(0)'\n    })), transition(':enter', [style({\n      transform: 'translateX(-100%)'\n    }), animate('0.5s ease-in-out', style({\n      transform: 'translateX(0)'\n    }))]), transition(':leave', [style({\n      transform: 'translateX(0)'\n    }), animate('0.5s ease-in-out', style({\n      transform: 'translateX(100%)'\n    }))])]), trigger('slideInSprint', [state('in', style({\n      transform: 'translateX(0)'\n    })), transition(':enter', [style({\n      transform: 'translateX(12%)'\n    }), animate('0.6s ease-in-out', style({\n      transform: 'translateX(0%)'\n    }))]), transition(':leave', [style({\n      transform: 'translateX(0)'\n    }), animate('0.6s ease-in-out', style({\n      transform: 'translateX(-100%)'\n    }))])])]\n  }), __metadata(\"design:paramtypes\", [HistoireTicketService, HttpClient, SprintService, MatDialog, MembreService, ProductBacklogService])], IconsComponent);\n  return IconsComponent;\n}();\nexport { IconsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}