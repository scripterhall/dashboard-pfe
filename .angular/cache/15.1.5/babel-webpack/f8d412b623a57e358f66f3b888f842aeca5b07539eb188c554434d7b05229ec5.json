{"ast":null,"code":"import { __decorate, __metadata, __param } from \"tslib\";\nimport { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SprintBacklog } from 'src/app/model/sprint-backlog';\nimport { HistoireTicketService } from 'src/app/service/histoire-ticket.service';\nimport { SprintBacklogService } from 'src/app/service/sprint-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport { TicketTacheService } from 'src/app/service/ticket-tache.service';\nvar SprintDialogPanelComponent = /** @class */function () {\n  function SprintDialogPanelComponent(dialogRef, data, fb, sprintService, ticketTacheService, histoireTicketService, sprintBacklogService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.fb = fb;\n    this.sprintService = sprintService;\n    this.ticketTacheService = ticketTacheService;\n    this.histoireTicketService = histoireTicketService;\n    this.sprintBacklogService = sprintBacklogService;\n    this.ajouterTick = false;\n    this.isOpen = false;\n    this.modifActif = false;\n    this.listEtat = [\"terminer\", \"a faire\", \"a verifier\", \"en cours\"];\n  }\n  SprintDialogPanelComponent.prototype.ngOnInit = function () {\n    this.projet = JSON.parse(localStorage.getItem(\"projet\"));\n    this.TicketTacheModif = this.fb.group({\n      id: ['', Validators.required],\n      nbrHeurs: ['', Validators.required],\n      membreId: [],\n      SprintBacklogId: [],\n      etat: []\n    });\n    this.ticketTacheForm = this.fb.group({\n      nbHeurs: [null, Validators.required],\n      titre: ['', Validators.required],\n      description: [null, Validators.required]\n    });\n    var conv_data = new Date(this.data.sprint.dateLancement);\n    if (conv_data.getTime() >= new Date().getTime() && confirm(\"Aujourd'hui c'est la date de Lancement de ce sprint voulez vous accepter !!\")) {\n      this.lancerSprint();\n    }\n  };\n  SprintDialogPanelComponent.prototype.afficherTicketTache = function (ht) {\n    var _this = this;\n    this.ticketTacheService.getListTicketTacheParHt(ht.id).subscribe(function (data) {\n      console.log(data);\n      _this.ticketTacheList = data;\n    });\n  };\n  SprintDialogPanelComponent.prototype.showDetailSprint = function () {\n    this.isOpen = !this.isOpen;\n  };\n  SprintDialogPanelComponent.prototype.detacherHt = function (ht, i) {\n    var _this = this;\n    console.log(ht.sprint);\n    if (confirm('vous êtes sur de detacher cette ticket histoire de sprint')) {\n      ht.sprintId = null;\n      this.histoireTicketService.DetacherHtSprint(ht).subscribe(function (dataHt) {\n        _this.data.TicketHistoires.splice(i, 1);\n      });\n    }\n  };\n  SprintDialogPanelComponent.prototype.showModif = function () {\n    // console.log(this.data.sprint.productBacklogId)\n    this.changeDates = this.fb.group({\n      dateLancement: [this.data.sprint.dateLancement, Validators.required],\n      dateFin: [this.data.sprint.dateFin, [this.validateDateFin.bind(this), Validators.required]]\n    });\n    this.modifActif = !this.modifActif;\n  };\n  SprintDialogPanelComponent.prototype.validateDateFin = function (control) {\n    var _a;\n    var dateLancement = new Date((_a = control.parent) === null || _a === void 0 ? void 0 : _a.get('dateLancement').value);\n    var dateFin = new Date(control.value);\n    if (dateLancement && dateFin && dateLancement >= dateFin) {\n      return {\n        'dateFinInvalide': true\n      };\n    }\n    return null;\n  };\n  SprintDialogPanelComponent.prototype.terminerChangement = function () {\n    var _this = this;\n    console.log(this.data.sprint.productBacklogId);\n    this.data.sprint.productBacklogId = this.data.sprint.productBacklog.id;\n    this.data.sprint.etat = 'a faire';\n    this.data.sprint.dateLancement = this.changeDates.get('dateLancement').value;\n    this.data.sprint.dateFin = this.changeDates.get('dateFin').value;\n    this.sprintService.modifierSprint(this.data.sprint).subscribe(function (data) {\n      console.log(data);\n      _this.data.sprint = data;\n      _this.modifActif = false;\n    });\n  };\n  //afficher le formualire d'ajout\n  SprintDialogPanelComponent.prototype.showFormAjout = function () {\n    this.ajouterTick = !this.ajouterTick;\n  };\n  //ajouter une ticket tache dans le panel de detail sprint\n  SprintDialogPanelComponent.prototype.ajouterTicketTache = function (ht) {\n    var _this = this;\n    console.log(this.ticketTacheForm.value);\n    var ticketTache = this.ticketTacheForm.value;\n    ticketTache.ht = ht;\n    ticketTache.sprintBacklogId = null;\n    ticketTache.ticketHistoireId = ht.id;\n    console.log(ticketTache);\n    this.ticketTacheService.ajouterTicketTache(ticketTache).subscribe(function (data) {\n      console.log(data);\n      _this.ticketTacheList.push(data);\n      _this.ajouterTick = false;\n    });\n  };\n  //supprimer une ticket tache dans le panel de details sprint\n  SprintDialogPanelComponent.prototype.supprimerTicketTache = function (i) {\n    var _this = this;\n    if (confirm('vous êtes sur de supprimer cette tâche !')) this.ticketTacheService.supprimerTicketTache(this.ticketTacheList[i].id).subscribe(function (data) {\n      _this.ticketTacheList.splice(i, 1);\n    });\n  };\n  //lancer le sprint et generer un sprintBacklog avec force\n  SprintDialogPanelComponent.prototype.lancerSprintForcer = function () {\n    this.data.sprint.dateLancement = new Date(Date.now());\n    if (confirm(\"en appuyant sur le boutton <ok> votre sprint sera lancé avec la date \" + this.data.sprint.dateLancement)) {\n      this.lancerSprint();\n    }\n  };\n  //lancerNormalment le sprint dans la date de lancement\n  SprintDialogPanelComponent.prototype.lancerSprint = function () {\n    var _this = this;\n    this.data.sprint.etat = \"en cours\";\n    this.data.sprint.productBacklogId = this.data.sprint.sprintBacklog.id;\n    this.sprintService.modifierSprint(this.data.sprint).subscribe(function (data) {\n      console.log(data);\n      var sprintBacklog = new SprintBacklog();\n      sprintBacklog.velocite = data.velocite;\n      sprintBacklog.sprint = data;\n      sprintBacklog.sprintId = data.id;\n      var totalHeurs = 0;\n      for (var i = 0; i < _this.ticketTacheList.length; i++) totalHeurs += _this.ticketTacheList[i].nbHeurs;\n      sprintBacklog.nbrHeursTotal = totalHeurs;\n      _this.sprintBacklogService.genererSprintBacklog(sprintBacklog).subscribe(function (data) {\n        for (var i = 0; i < _this.ticketTacheList.length; i++) {\n          console.log(_this.ticketTacheList[i].id);\n          _this.ticketTacheList[i].sprintBacklogId = data.id;\n          _this.ticketTacheList[i].sprintBacklog = data;\n          _this.ticketTacheService.modifierTicketTache(_this.ticketTacheList[i]).subscribe(function (data) {\n            return console.log(data);\n          });\n        }\n      });\n    });\n  };\n  __decorate([ViewChild('tacheDetails'), __metadata(\"design:type\", ElementRef)], SprintDialogPanelComponent.prototype, \"myDetails\", void 0);\n  __decorate([ViewChild('calendar'), __metadata(\"design:type\", ElementRef)], SprintDialogPanelComponent.prototype, \"calendarLancement\", void 0);\n  __decorate([ViewChild('calendarFin'), __metadata(\"design:type\", ElementRef)], SprintDialogPanelComponent.prototype, \"calendarFin\", void 0);\n  SprintDialogPanelComponent = __decorate([Component({\n    selector: 'app-sprint-dialog-panel',\n    templateUrl: './sprint-dialog-panel.component.html',\n    styleUrls: ['./sprint-dialog-panel.component.scss']\n  }), __param(1, Inject(MAT_DIALOG_DATA)), __metadata(\"design:paramtypes\", [MatDialogRef, Object, FormBuilder, SprintService, TicketTacheService, HistoireTicketService, SprintBacklogService])], SprintDialogPanelComponent);\n  return SprintDialogPanelComponent;\n}();\nexport { SprintDialogPanelComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}