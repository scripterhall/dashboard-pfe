{"ast":null,"code":"import * as i0 from \"@angular/core\";\nvar MapComponent = /** @class */function () {\n  function MapComponent() {}\n  MapComponent.prototype.ngOnInit = function () {};\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)();\n  };\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    decls: 14,\n    vars: 0,\n    consts: [[1, \"content\"], [\"id\", \"accordionExample\", 1, \"accordion\"], [1, \"accordion-item\"], [\"id\", \"headingOne\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseOne\", \"aria-expanded\", \"true\", \"aria-controls\", \"collapseOne\", 1, \"accordion-button\"], [\"id\", \"collapseOne\", \"aria-labelledby\", \"headingOne\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\", \"show\"], [1, \"accordion-body\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3)(4, \"button\", 4);\n        i0.ɵɵtext(5, \" Accordion Item #1 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"strong\");\n        i0.ɵɵtext(9, \"This is the first item's accordion body.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n        i0.ɵɵelementStart(11, \"code\");\n        i0.ɵɵtext(12, \".accordion-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \", though the transition does limit overflow. \");\n        i0.ɵɵelementEnd()()()()();\n      }\n    }\n  });\n  return MapComponent;\n}();\nexport { MapComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}