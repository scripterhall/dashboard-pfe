{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport { Sprint } from 'src/app/model/sprint';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/sprint.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/datepicker\";\nimport * as i7 from \"@angular/material/button\";\nvar AjouterSprintFormComponent = /** @class */function () {\n  function AjouterSprintFormComponent(fb, sprintService, dialogRef, data) {\n    this.fb = fb;\n    this.sprintService = sprintService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.clickCount = 0;\n  }\n  AjouterSprintFormComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  // onSave() {\n  //   const formData = this.form.value;\n  //   this.sprintService.createSprint(formData).subscribe(\n  //     response => {\n  //       console.log('Sprint ajouté avec succès.');\n  //       console.log(formData);\n  //       this.move();\n  //       location.reload();\n  //       this.dialogRef.close();\n  //     },\n  //     error => {\n  //       console.error(\"Erreur d'enregistrement du sprint ! : \", error);\n  //     }\n  //   );\n  // }\n  AjouterSprintFormComponent.prototype.onSave = function () {\n    var _this = this;\n    var productBacklogId = 1;\n    var sprint = new Sprint();\n    sprint.objectif = this.form.get('objectif').value;\n    sprint.date_lancement = this.form.get('dateLancement').value;\n    sprint.date_fin = this.form.get('dateFin').value;\n    this.sprintService.createSprint(sprint, productBacklogId).subscribe(function (createdSprint) {\n      console.log('Sprint créé avec succès :', createdSprint);\n      _this.move();\n      location.reload();\n      _this.dialogRef.close();\n    }, function (error) {\n      console.error('Erreur lors de la création du sprint :', error);\n    });\n  };\n  AjouterSprintFormComponent.prototype.move = function () {\n    this.clickCount++;\n  };\n  AjouterSprintFormComponent.prototype.ngOnInit = function () {\n    this.form = this.fb.group({\n      objectif: ['', Validators.required],\n      dateLancement: [],\n      dateFin: []\n    });\n  };\n  AjouterSprintFormComponent.ɵfac = function AjouterSprintFormComponent_Factory(t) {\n    return new (t || AjouterSprintFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SprintService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  AjouterSprintFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AjouterSprintFormComponent,\n    selectors: [[\"app-ajouter-sprint-form\"]],\n    decls: 24,\n    vars: 5,\n    consts: [[1, \"form-container\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-field\"], [\"matInput\", \"\", \"formControlName\", \"objectif\", \"required\", \"\"], [\"type\", \"date\", \"matInput\", \"\", \"formControlName\", \"dateLancement\", \"required\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker1\", \"\"], [\"type\", \"date\", \"matInput\", \"\", \"formControlName\", \"dateFin\", \"required\", \"\", 3, \"matDatepicker\"], [\"picker2\", \"\"], [1, \"button-row\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"form-button\"], [\"mat-raised-button\", \"\", \"mat-dialog-close\", \"\", 1, \"form-button\"]],\n    template: function AjouterSprintFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AjouterSprintFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSave();\n        });\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Objectif\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Date de lancement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 3)(9, \"mat-datepicker-toggle\", 4)(10, \"mat-datepicker\", null, 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 1)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Date de fin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 6)(16, \"mat-datepicker-toggle\", 4)(17, \"mat-datepicker\", null, 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 8)(20, \"button\", 9);\n        i0.ɵɵtext(21, \"Enregistrer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 10);\n        i0.ɵɵtext(23, \"Annuler\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        var _r0 = i0.ɵɵreference(11);\n        var _r1 = i0.ɵɵreference(18);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"matDatepicker\", _r0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r0);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i4.MatInput, i5.MatFormField, i5.MatLabel, i5.MatSuffix, i6.MatDatepicker, i6.MatDatepickerInput, i6.MatDatepickerToggle, i7.MatButton, i3.MatDialogClose]\n  });\n  return AjouterSprintFormComponent;\n}();\nexport { AjouterSprintFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}