{"ast":null,"code":"import { ElementRef } from \"@angular/core\";\nimport { ROUTES } from \"../sidebar/sidebar.component\";\nimport { Location } from \"@angular/common\";\nimport { Router } from \"@angular/router\";\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nvar NavbarComponent = /** @class */function () {\n  function NavbarComponent(location, element, router, modalService) {\n    var _this = this;\n    this.element = element;\n    this.router = router;\n    this.modalService = modalService;\n    this.mobile_menu_visible = 0;\n    this.isCollapsed = true;\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n    this.updateColor = function () {\n      var navbar = document.getElementsByClassName('navbar')[0];\n      if (window.innerWidth < 993 && !_this.isCollapsed) {\n        navbar.classList.add('bg-white');\n        navbar.classList.remove('navbar-transparent');\n      } else {\n        navbar.classList.remove('bg-white');\n        navbar.classList.add('navbar-transparent');\n      }\n    };\n    this.location = location;\n    this.sidebarVisible = false;\n  }\n  NavbarComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    window.addEventListener(\"resize\", this.updateColor);\n    this.listTitles = ROUTES.filter(function (listTitle) {\n      return listTitle;\n    });\n    var navbar = this.element.nativeElement;\n    this.toggleButton = navbar.getElementsByClassName(\"navbar-toggler\")[0];\n    this.router.events.subscribe(function (event) {\n      _this.sidebarClose();\n      var $layer = document.getElementsByClassName(\"close-layer\")[0];\n      if ($layer) {\n        $layer.remove();\n        _this.mobile_menu_visible = 0;\n      }\n    });\n  };\n  NavbarComponent.prototype.collapse = function () {\n    this.isCollapsed = !this.isCollapsed;\n    var navbar = document.getElementsByTagName(\"nav\")[0];\n    if (!this.isCollapsed) {\n      navbar.classList.remove(\"navbar-transparent\");\n      navbar.classList.add(\"bg-white\");\n    } else {\n      navbar.classList.add(\"navbar-transparent\");\n      navbar.classList.remove(\"bg-white\");\n    }\n  };\n  NavbarComponent.prototype.sidebarOpen = function () {\n    var toggleButton = this.toggleButton;\n    var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n    var html = document.getElementsByTagName(\"html\")[0];\n    if (window.innerWidth < 991) {\n      mainPanel.style.position = \"fixed\";\n    }\n    setTimeout(function () {\n      toggleButton.classList.add(\"toggled\");\n    }, 500);\n    html.classList.add(\"nav-open\");\n    this.sidebarVisible = true;\n  };\n  NavbarComponent.prototype.sidebarClose = function () {\n    var html = document.getElementsByTagName(\"html\")[0];\n    this.toggleButton.classList.remove(\"toggled\");\n    var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n    if (window.innerWidth < 991) {\n      setTimeout(function () {\n        mainPanel.style.position = \"\";\n      }, 500);\n    }\n    this.sidebarVisible = false;\n    html.classList.remove(\"nav-open\");\n  };\n  NavbarComponent.prototype.sidebarToggle = function () {\n    // const toggleButton = this.toggleButton;\n    // const html = document.getElementsByTagName('html')[0];\n    var $toggle = document.getElementsByClassName(\"navbar-toggler\")[0];\n    if (this.sidebarVisible === false) {\n      this.sidebarOpen();\n    } else {\n      this.sidebarClose();\n    }\n    var html = document.getElementsByTagName(\"html\")[0];\n    if (this.mobile_menu_visible == 1) {\n      // $('html').removeClass('nav-open');\n      html.classList.remove(\"nav-open\");\n      if ($layer) {\n        $layer.remove();\n      }\n      setTimeout(function () {\n        $toggle.classList.remove(\"toggled\");\n      }, 400);\n      this.mobile_menu_visible = 0;\n    } else {\n      setTimeout(function () {\n        $toggle.classList.add(\"toggled\");\n      }, 430);\n      var $layer = document.createElement(\"div\");\n      $layer.setAttribute(\"class\", \"close-layer\");\n      if (html.querySelectorAll(\".main-panel\")) {\n        document.getElementsByClassName(\"main-panel\")[0].appendChild($layer);\n      } else if (html.classList.contains(\"off-canvas-sidebar\")) {\n        document.getElementsByClassName(\"wrapper-full-page\")[0].appendChild($layer);\n      }\n      setTimeout(function () {\n        $layer.classList.add(\"visible\");\n      }, 100);\n      $layer.onclick = function () {\n        //asign a function\n        html.classList.remove(\"nav-open\");\n        this.mobile_menu_visible = 0;\n        $layer.classList.remove(\"visible\");\n        setTimeout(function () {\n          $layer.remove();\n          $toggle.classList.remove(\"toggled\");\n        }, 400);\n      }.bind(this);\n      html.classList.add(\"nav-open\");\n      this.mobile_menu_visible = 1;\n    }\n  };\n  NavbarComponent.prototype.getTitle = function () {\n    var titlee = this.location.prepareExternalUrl(this.location.path());\n    if (titlee.charAt(0) === \"#\") {\n      titlee = titlee.slice(1);\n    }\n    for (var item = 0; item < this.listTitles.length; item++) {\n      if (this.listTitles[item].path === titlee) {\n        return this.listTitles[item].title;\n      }\n    }\n    return \"Dashboard\";\n  };\n  NavbarComponent.prototype.open = function (content) {\n    var _this = this;\n    this.modalService.open(content, {\n      windowClass: 'modal-search'\n    }).result.then(function (result) {\n      _this.closeResult = \"Closed with: \".concat(result);\n    }, function (reason) {\n      _this.closeResult = \"Dismissed \".concat(_this.getDismissReason(reason));\n    });\n  };\n  NavbarComponent.prototype.getDismissReason = function (reason) {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return \"with: \".concat(reason);\n    }\n  };\n  NavbarComponent.prototype.ngOnDestroy = function () {\n    window.removeEventListener(\"resize\", this.updateColor);\n  };\n  NavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NgbModal));\n  };\n  NavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar\"]],\n    decls: 0,\n    vars: 0,\n    template: function NavbarComponent_Template(rf, ctx) {},\n    styles: [\".container-fluid[_ngcontent-%COMP%]{\\r\\nbackground-color: red;\\r\\nwidth: 100%;\\r\\n}\"]\n  });\n  return NavbarComponent;\n}();\nexport { NavbarComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}