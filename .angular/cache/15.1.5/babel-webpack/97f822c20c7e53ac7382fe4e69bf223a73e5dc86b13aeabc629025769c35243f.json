{"ast":null,"code":"import { SelectionModel } from \"@angular/cdk/collections\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport * as i0 from \"@angular/core\";\nvar ELEMENT_DATA = [{\n  position: 1,\n  name: 'Hydrogen',\n  weight: 1.0079,\n  symbol: 'H'\n}, {\n  position: 2,\n  name: 'Helium',\n  weight: 4.0026,\n  symbol: 'He'\n}, {\n  position: 3,\n  name: 'Lithium',\n  weight: 6.941,\n  symbol: 'Li'\n}, {\n  position: 4,\n  name: 'Beryllium',\n  weight: 9.0122,\n  symbol: 'Be'\n}, {\n  position: 5,\n  name: 'Boron',\n  weight: 10.811,\n  symbol: 'B'\n}, {\n  position: 6,\n  name: 'Carbon',\n  weight: 12.0107,\n  symbol: 'C'\n}, {\n  position: 7,\n  name: 'Nitrogen',\n  weight: 14.0067,\n  symbol: 'N'\n}, {\n  position: 8,\n  name: 'Oxygen',\n  weight: 15.9994,\n  symbol: 'O'\n}, {\n  position: 9,\n  name: 'Fluorine',\n  weight: 18.9984,\n  symbol: 'F'\n}, {\n  position: 10,\n  name: 'Neon',\n  weight: 20.1797,\n  symbol: 'Ne'\n}];\nvar IconsComponent = /** @class */function () {\n  function IconsComponent() {\n    this.displayedColumns = ['select', 'position', 'name', 'weight', 'symbol'];\n    this.dataSource1 = new MatTableDataSource(ELEMENT_DATA);\n    this.selection = new SelectionModel(true, []);\n  }\n  IconsComponent.prototype.ngOnInit = function () {};\n  /** Whether the number of selected elements matches the total number of rows. */\n  IconsComponent.prototype.isAllSelected = function () {\n    var numSelected = this.selection.selected.length;\n    var numRows = this.dataSource1.data.length;\n    return numSelected === numRows;\n  };\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  IconsComponent.prototype.toggleAllRows = function () {\n    var _a;\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    (_a = this.selection).select.apply(_a, this.dataSource1.data);\n  };\n  /** The label for the checkbox on the passed row */\n  IconsComponent.prototype.checkboxLabel = function (row) {\n    if (!row) {\n      return \"\".concat(this.isAllSelected() ? 'deselect' : 'select', \" all\");\n    }\n    return \"\".concat(this.selection.isSelected(row) ? 'deselect' : 'select', \" row \").concat(row.position + 1);\n  };\n  IconsComponent.ɵfac = function IconsComponent_Factory(t) {\n    return new (t || IconsComponent)();\n  };\n  IconsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IconsComponent,\n    selectors: [[\"app-icons\"]],\n    decls: 19,\n    vars: 1,\n    consts: [[1, \"content\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"title\"], [1, \"category\"], [\"href\", \"https://nucleoapp.com/?ref=1712\"], [1, \"card-body\", \"all-icons\"], [1, \"font-icon-list\", \"col-lg-3\", \"col-md-3\", \"col-sm-4\", \"col-xs-6\", \"col-xs-6\"], [1, \"font-icon-detail\"], [1, \"tim-icons\", \"icon-alert-circle-exc\"]],\n    template: function IconsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"100 Awesome Nucleo Icons\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\", 6);\n        i0.ɵɵtext(8, \" Handcrafted by our friends from \");\n        i0.ɵɵelementStart(9, \"a\", 7);\n        i0.ɵɵtext(10, \" NucleoApp \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 1)(13, \"div\", 9)(14, \"div\", 10);\n        i0.ɵɵelement(15, \"i\", 11);\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17, \"icon-alert-circle-exc\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(18);\n        i0.ɵɵtextInterpolate1(\" \", ctx.dataSource1, \" \");\n      }\n    },\n    encapsulation: 2\n  });\n  return IconsComponent;\n}();\nexport { IconsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}