{"ast":null,"code":"import { moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { ToastrService } from 'ngx-toastr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nvar NotificationsComponent = /** @class */function () {\n  function NotificationsComponent(toastr) {\n    this.toastr = toastr;\n    this.staticAlertClosed = false;\n    this.staticAlertClosed1 = false;\n    this.staticAlertClosed2 = false;\n    this.staticAlertClosed3 = false;\n    this.staticAlertClosed4 = false;\n    this.staticAlertClosed5 = false;\n    this.staticAlertClosed6 = false;\n    this.staticAlertClosed7 = false;\n    this.todo = [{\n      title: 'Task 1',\n      description: 'Lorem ipsum dolor sit amet'\n    }, {\n      title: 'Task 2',\n      description: 'consectetur adipiscing elit'\n    }, {\n      title: 'Task 3',\n      description: 'sed do eiusmod tempor incididunt ut labore'\n    }];\n    this.inProgress = [{\n      title: 'Task 4',\n      description: 'Ut enim ad minim veniam'\n    }, {\n      title: 'Task 5',\n      description: 'quis nostrud exercitation ullamco laboris'\n    }];\n    this.done = [{\n      title: 'Task 6',\n      description: 'nisi ut aliquip ex ea commodo consequat'\n    }, {\n      title: 'Task 7',\n      description: 'Duis aute irure dolor in reprehenderit'\n    }, {\n      title: 'Task 8',\n      description: 'Excepteur sint occaecat cupidatat non proident'\n    }];\n  }\n  NotificationsComponent.prototype.onDrop = function (event, columnName) {\n    if (event.previousContainer === event.container) {\n      // Réorganiser les éléments dans le même tableau\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      // Déplacer l'élément vers un autre tableau\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n    // Enregistrer les changements dans la base de données\n    // this.saveTask(event.item.data, columnName);\n  };\n\n  NotificationsComponent.prototype.ngOnInit = function () {};\n  NotificationsComponent.ɵfac = function NotificationsComponent_Factory(t) {\n    return new (t || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.ToastrService));\n  };\n  NotificationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationsComponent,\n    selectors: [[\"app-notifications\"]],\n    decls: 0,\n    vars: 0,\n    template: function NotificationsComponent_Template(rf, ctx) {},\n    styles: [\".scrum-board[_ngcontent-%COMP%] {\\n  display: flex;\\n  height: 100%;\\n  width: 100%;\\n  background-color: #121212;\\n}\\n\\n.scrum-column[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 33.3%;\\n  height: 100%;\\n}\\n\\n.scrum-column[_ngcontent-%COMP%]   mat-toolbar[_ngcontent-%COMP%] {\\n  height: 64px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.column-title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: bold;\\n  margin-left: 8px;\\n  color: #fff;\\n}\\n\\n.drag-handle[_ngcontent-%COMP%] {\\n  cursor: move;\\n  color: #fff;\\n}\\n\\n.scrum-list[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  overflow-y: auto;\\n  flex-grow: 1;\\n  background-color: #1f1f1f;\\n  border-radius: 8px;\\n}\\n\\n.scrum-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 8px;\\n  margin-bottom: 8px;\\n  background-color: #292929;\\n  border-radius: 8px;\\n}\\n\\n.scrum-content[_ngcontent-%COMP%] {\\n  margin-left: 8px;\\n  color: #fff;\\n}\\n\\n.scrum-content[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 16px;\\n  font-weight: bold;\\n}\\n\\n.scrum-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 14px;\\n}\"]\n  });\n  return NotificationsComponent;\n}();\nexport { NotificationsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}