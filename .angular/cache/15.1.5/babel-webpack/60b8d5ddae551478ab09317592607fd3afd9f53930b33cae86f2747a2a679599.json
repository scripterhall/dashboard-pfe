{"ast":null,"code":"import { ToastrService } from 'ngx-toastr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nvar NotificationsComponent = /** @class */function () {\n  function NotificationsComponent(toastr) {\n    this.toastr = toastr;\n    this.staticAlertClosed = false;\n    this.staticAlertClosed1 = false;\n    this.staticAlertClosed2 = false;\n    this.staticAlertClosed3 = false;\n    this.staticAlertClosed4 = false;\n    this.staticAlertClosed5 = false;\n    this.staticAlertClosed6 = false;\n    this.staticAlertClosed7 = false;\n  }\n  NotificationsComponent.prototype.showNotification = function (from, align) {\n    var color = Math.floor(Math.random() * 5 + 1);\n    switch (color) {\n      case 1:\n        this.toastr.info('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-info alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 2:\n        this.toastr.success('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-success alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 3:\n        this.toastr.warning('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-warning alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 4:\n        this.toastr.error('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          enableHtml: true,\n          closeButton: true,\n          toastClass: \"alert alert-danger alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 5:\n        this.toastr.show('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-primary alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  NotificationsComponent.prototype.ngOnInit = function () {};\n  NotificationsComponent.ɵfac = function NotificationsComponent_Factory(t) {\n    return new (t || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.ToastrService));\n  };\n  NotificationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationsComponent,\n    selectors: [[\"app-notifications\"]],\n    decls: 44,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"scrum-board\"], [1, \"scrum-column\"], [1, \"scrum-list\"], [1, \"scrum-item\"], [1, \"scrum-item\", \"in-progress\"], [1, \"scrum-item\", \"done\"]],\n    template: function NotificationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"To do\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ul\", 3)(6, \"li\", 4)(7, \"h3\");\n        i0.ɵɵtext(8, \"Task 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"Description of Task 1\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"li\", 4)(12, \"h3\");\n        i0.ɵɵtext(13, \"Task 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\");\n        i0.ɵɵtext(15, \"Description of Task 2\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"li\", 4)(17, \"h3\");\n        i0.ɵɵtext(18, \"Task 3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \"Description of Task 3\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(21, \"div\", 2)(22, \"h2\");\n        i0.ɵɵtext(23, \"In Progress\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"ul\", 3)(25, \"li\", 5)(26, \"h3\");\n        i0.ɵɵtext(27, \"Task 4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"p\");\n        i0.ɵɵtext(29, \"Description of Task 4\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"li\", 5)(31, \"h3\");\n        i0.ɵɵtext(32, \"Task 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"p\");\n        i0.ɵɵtext(34, \"Description of Task 5\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(35, \"div\", 2)(36, \"h2\");\n        i0.ɵɵtext(37, \"Done\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"ul\", 3)(39, \"li\", 6)(40, \"h3\");\n        i0.ɵɵtext(41, \"Task 6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"p\");\n        i0.ɵɵtext(43, \"Description of Task 6\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n    },\n    styles: [\".scrum-board[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: flex-start;\\n  padding: 30px;\\n}\\n\\n.scrum-column[_ngcontent-%COMP%] {\\n  flex-basis: 30%;\\n  background-color: #222;\\n  padding: 10px;\\n  border-radius: 10px;\\n  box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.1);\\n}\\n\\n.scrum-column[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  margin-bottom: 10px;\\n  color: #fff;\\n}\\n\\n.scrum-list[_ngcontent-%COMP%] {\\n  background-color: #222;\\n  padding: 10px;\\n  border-radius: 10px;\\n  box-shadow: 0px 0px 5px rgba(255, 255, 255, 0.1);\\n}\\n\\n.scrum-item[_ngcontent-%COMP%] {\\n  background-color: #222;\\n  padding: 10px;\\n  margin-bottom: 10px;\\n  border-radius: 10px;\\n  box-shadow: 0px 0px 5px rgba(255, 255, 255, 0.1);\\n  color: #fff;\\n}\\n\\n.scrum-item[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n  margin-bottom: 5px;\\n}\\n\\n.scrum-item[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #ccc;\\n}\\n\\n.in-progress[_ngcontent-%COMP%] {\\n  background-color: #fdd835;\\n}\\n\\n.done[_ngcontent-%COMP%] {\\n  background-color: #66bb6a;\\n}\"]\n  });\n  return NotificationsComponent;\n}();\nexport { NotificationsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}