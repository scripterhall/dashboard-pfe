{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nvar BurnDownChartComponent = /** @class */function () {\n  function BurnDownChartComponent() {}\n  BurnDownChartComponent.prototype.ngOnInit = function () {\n    // Remplacer ces valeurs par les données de votre sprint et les tickets\n    this.sprintId = 1;\n    this.startDate = new Date(\"2023-04-01\");\n    this.endDate = new Date(\"2023-04-15\");\n    this.velocity = 20;\n    this.tickets = [{\n      id: 1,\n      title: \"Histoire 1\",\n      startDate: new Date(\"2023-04-01\"),\n      endDate: new Date(\"2023-04-03\"),\n      effort: 10\n    }, {\n      id: 2,\n      title: \"Histoire 2\",\n      startDate: new Date(\"2023-04-02\"),\n      endDate: new Date(\"2023-04-06\"),\n      effort: 15\n    }, {\n      id: 3,\n      title: \"Histoire 3\",\n      startDate: new Date(\"2023-04-04\"),\n      endDate: new Date(\"2023-04-08\"),\n      effort: 5\n    }, {\n      id: 4,\n      title: \"Histoire 4\",\n      startDate: new Date(\"2023-04-06\"),\n      endDate: new Date(\"2023-04-10\"),\n      effort: 20\n    }, {\n      id: 5,\n      title: \"Histoire 5\",\n      startDate: new Date(\"2023-04-09\"),\n      endDate: new Date(\"2023-04-12\"),\n      effort: 5\n    }];\n    // Appeler la fonction pour générer le burn down chart\n    this.generateBurnDownChart();\n  };\n  BurnDownChartComponent.prototype.generateBurnDownChart = function () {\n    var daysInSprint = this.getDaysInSprint();\n    var idealBurndown = this.getIdealBurndown(daysInSprint, this.velocity);\n    var actualBurndown = this.getActualBurndown(daysInSprint);\n    // Générer le graphique en utilisant les données générées\n    // Vous pouvez utiliser une bibliothèque de graphiques telle que Chart.js pour générer le graphique\n    // Ensuite, vous pouvez utiliser les données générées pour remplir le graphique\n  };\n\n  BurnDownChartComponent.prototype.getDaysInSprint = function () {\n    var millisecondsInDay = 1000 * 60 * 60 * 24;\n    var days = Math.round((this.endDate.getTime() - this.startDate.getTime()) / millisecondsInDay) + 1;\n    return days;\n  };\n  BurnDownChartComponent.prototype.getIdealBurndown = function (daysInSprint, velocity) {\n    var idealBurndown = [];\n    var dailyVelocity = velocity / daysInSprint;\n    var remainingEffort = velocity;\n    for (var i = 0; i < daysInSprint; i++) {\n      idealBurndown.push(remainingEffort);\n      remainingEffort -= dailyVelocity;\n    }\n  };\n  BurnDownChartComponent = __decorate([Component({\n    selector: 'app-burn-down-chart',\n    templateUrl: './burn-down-chart.component.html',\n    styleUrls: ['./burn-down-chart.component.css']\n  }), __metadata(\"design:paramtypes\", [])], BurnDownChartComponent);\n  return BurnDownChartComponent;\n}();\nexport { BurnDownChartComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}