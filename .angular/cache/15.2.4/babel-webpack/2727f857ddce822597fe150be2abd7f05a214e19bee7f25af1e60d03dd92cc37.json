{"ast":null,"code":"import { ToastrService } from 'ngx-toastr';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport { TicketTacheService } from 'src/app/service/ticket-tache.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"src/app/service/ticket-tache.service\";\nimport * as i3 from \"src/app/service/product-backlog.service\";\nimport * as i4 from \"src/app/service/sprint.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@ng-bootstrap/ng-bootstrap\";\nfunction ScrumBoardComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var sprint_r2 = ctx.$implicit;\n    var i_r3 = ctx.index;\n    i0.ɵɵproperty(\"value\", sprint_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", \"Sprint \" + (i_r3 + 1), \" \", sprint_r2.etat, \" \");\n  }\n}\nfunction ScrumBoardComponent_div_5_span_7_ngb_alert_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngb-alert\", 25)(1, \"span\")(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var tache_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", \"info\")(\"dismissible\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", tache_r8.titre, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" De \", i0.ɵɵpipeBind1(5, 5, tache_r8.dateLancement), \" \\u00E0 \", i0.ɵɵpipeBind1(6, 7, tache_r8.dateFin), \" \");\n  }\n}\nfunction ScrumBoardComponent_div_5_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵlistener(\"dragend\", function ScrumBoardComponent_div_5_span_7_Template_span_dragend_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var tache_r8 = restoredCtx.$implicit;\n      var ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onDragEnd($event, tache_r8));\n    })(\"drop\", function ScrumBoardComponent_div_5_span_7_Template_span_drop_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var tache_r8 = restoredCtx.$implicit;\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDrop($event, tache_r8));\n    });\n    i0.ɵɵtemplate(1, ScrumBoardComponent_div_5_span_7_ngb_alert_1_Template, 7, 9, \"ngb-alert\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"draggable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r8.etat === \"\\u00E0 faire\");\n  }\n}\nfunction ScrumBoardComponent_div_5_span_14_ngb_alert_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngb-alert\", 25)(1, \"span\")(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var tache_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", \"warning\")(\"dismissible\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", tache_r14.titre, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" De \", i0.ɵɵpipeBind1(5, 5, tache_r14.dateLancement), \" \\u00E0 \", i0.ɵɵpipeBind1(6, 7, tache_r14.dateFin), \" \");\n  }\n}\nfunction ScrumBoardComponent_div_5_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵlistener(\"drop\", function ScrumBoardComponent_div_5_span_14_Template_span_drop_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r18);\n      var tache_r14 = restoredCtx.$implicit;\n      var ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.onDrop($event, tache_r14));\n    });\n    i0.ɵɵtemplate(1, ScrumBoardComponent_div_5_span_14_ngb_alert_1_Template, 7, 9, \"ngb-alert\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"draggable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r14.etat === \"en cours\");\n  }\n}\nfunction ScrumBoardComponent_div_5_span_21_ngb_alert_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngb-alert\", 25);\n    i0.ɵɵelementContainerStart(1, 27);\n    i0.ɵɵelementStart(2, \"span\")(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", \"primary\")(\"dismissible\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"diabled\", tache_r19.etat == \"termin\\u00E9\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", tache_r19.titre, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" De \", i0.ɵɵpipeBind1(6, 6, tache_r19.dateLancement), \" \\u00E0 \", i0.ɵɵpipeBind1(7, 8, tache_r19.dateFin), \" \");\n  }\n}\nfunction ScrumBoardComponent_div_5_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵlistener(\"drop\", function ScrumBoardComponent_div_5_span_21_Template_span_drop_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r23);\n      var tache_r19 = restoredCtx.$implicit;\n      var ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDrop($event, tache_r19));\n    });\n    i0.ɵɵtemplate(1, ScrumBoardComponent_div_5_span_21_ngb_alert_1_Template, 8, 10, \"ngb-alert\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r19 = ctx.$implicit;\n    i0.ɵɵproperty(\"draggable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r19.etat === \"termin\\u00E9\");\n  }\n}\nfunction ScrumBoardComponent_div_5_span_31_ngb_alert_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngb-alert\", 25)(1, \"span\")(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var tache_r24 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"type\", \"danger\")(\"dismissible\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", tache_r24.titre, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" De \", i0.ɵɵpipeBind1(5, 5, tache_r24.dateLancement), \" \\u00E0 \", i0.ɵɵpipeBind1(6, 7, tache_r24.dateFin), \" \");\n  }\n}\nfunction ScrumBoardComponent_div_5_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵlistener(\"drop\", function ScrumBoardComponent_div_5_span_31_Template_span_drop_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r28);\n      var tache_r24 = restoredCtx.$implicit;\n      var ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.onDrop($event, tache_r24));\n    });\n    i0.ɵɵtemplate(1, ScrumBoardComponent_div_5_span_31_ngb_alert_1_Template, 7, 9, \"ngb-alert\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tache_r24 = ctx.$implicit;\n    i0.ɵɵproperty(\"draggable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tache_r24.etat === \"\\u00E0 v\\u00E9rifier\");\n  }\n}\nfunction ScrumBoardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"div\", 8)(3, \"div\", 9)(4, \"h4\", 10);\n    i0.ɵɵtext(5, \"A faire\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 11);\n    i0.ɵɵtemplate(7, ScrumBoardComponent_div_5_span_7_Template, 2, 2, \"span\", 12);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"div\", 13)(9, \"div\", 8)(10, \"div\", 9)(11, \"h4\", 10);\n    i0.ɵɵtext(12, \"En cours\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 14);\n    i0.ɵɵtemplate(14, ScrumBoardComponent_div_5_span_14_Template, 2, 2, \"span\", 15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"div\", 16)(16, \"div\", 8)(17, \"div\", 9)(18, \"h4\", 10);\n    i0.ɵɵtext(19, \"Termin\\u00E9\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 17);\n    i0.ɵɵtemplate(21, ScrumBoardComponent_div_5_span_21_Template, 2, 2, \"span\", 15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"div\", 18)(23, \"div\", 8)(24, \"div\", 19)(25, \"div\", 20)(26, \"div\", 6)(27, \"div\", 21)(28, \"h4\", 10);\n    i0.ɵɵtext(29, \"A verifier\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(30, \"div\", 22);\n    i0.ɵɵtemplate(31, ScrumBoardComponent_div_5_span_31_Template, 2, 2, \"span\", 15);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ticketsTache);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ticketsTache);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ticketsTache);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ticketsTache);\n  }\n}\nvar ScrumBoardComponent = /** @class */function () {\n  function ScrumBoardComponent(toastr, ticketTacheService, productBacklogService, sprintService) {\n    this.toastr = toastr;\n    this.ticketTacheService = ticketTacheService;\n    this.productBacklogService = productBacklogService;\n    this.sprintService = sprintService;\n    this.staticAlertClosed = false;\n    this.staticAlertClosed1 = false;\n    this.staticAlertClosed2 = false;\n    this.staticAlertClosed3 = false;\n    this.staticAlertClosed4 = false;\n    this.staticAlertClosed5 = false;\n    this.staticAlertClosed6 = false;\n    this.staticAlertClosed7 = false;\n    this.ticketsTache = [];\n    this.movedElementId = '';\n  }\n  ScrumBoardComponent.prototype.showNotification = function (from, align) {\n    var color = Math.floor(Math.random() * 5 + 1);\n    switch (color) {\n      case 1:\n        this.toastr.info('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-info alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 2:\n        this.toastr.success('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-success alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 3:\n        this.toastr.warning('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-warning alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 4:\n        this.toastr.error('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          enableHtml: true,\n          closeButton: true,\n          toastClass: \"alert alert-danger alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      case 5:\n        this.toastr.show('<span class=\"tim-icons icon-bell-55\" [data-notify]=\"icon\"></span> Welcome to <b>Black Dashboard Angular</b> - a beautiful freebie for every web developer.', '', {\n          disableTimeOut: true,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-primary alert-with-icon\",\n          positionClass: 'toast-' + from + '-' + align\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  ScrumBoardComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.sprintService.getListSprintsByProductBacklog(this.productBacklogService.getProductBacklogByIdFromLocalStorage()).subscribe(function (data) {\n      _this.sprints = data;\n    });\n  };\n  ScrumBoardComponent.prototype.getTicketsTacheBySprint = function (sprintId) {\n    var _this = this;\n    if (sprintId) {\n      this.ticketTacheService.getTicketsTacheBySprint(sprintId).subscribe(function (tickets) {\n        _this.ticketsTache = tickets;\n        console.log(_this.ticketsTache);\n      });\n    } else {\n      this.ticketsTache = null;\n    }\n  };\n  ScrumBoardComponent.prototype.onDrop = function (event, tache) {\n    var targetElement = event.target;\n    var containerElement = targetElement.closest('.card-body');\n    var containerId = containerElement.getAttribute('id');\n    console.log('Nouvel etat du ticket tâche: ', containerId);\n    if (tache.membreId != null) {\n      tache.etat = containerId;\n      this.ticketTacheService.modifierTicketTache(tache).subscribe(function (modifiedTicket) {\n        console.log('Ticket tâche déplacé:', modifiedTicket);\n      }, function (error) {\n        console.error('Erreur: ', error);\n      });\n    } else {}\n  };\n  ScrumBoardComponent.prototype.onDragEnd = function (event, tache) {\n    console.log(tache);\n    if (tache.membreId == null) {\n      this.toastr.error(\"Cette ticket n'a pas de membre\");\n      this.ngOnInit();\n    }\n  };\n  ScrumBoardComponent.ɵfac = function ScrumBoardComponent_Factory(t) {\n    return new (t || ScrumBoardComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.TicketTacheService), i0.ɵɵdirectiveInject(i3.ProductBacklogService), i0.ɵɵdirectiveInject(i4.SprintService));\n  };\n  ScrumBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ScrumBoardComponent,\n    selectors: [[\"app-scrum-board\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"content\"], [3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row\", 4, \"ngIf\"], [3, \"value\"], [1, \"row\"], [1, \"col-md-4\", \"vh-100\", \"d-flex\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [\"id\", \"\\u00E0 faire\", 1, \"card-body\", 2, \"overflow-y\", \"auto\", \"max-height\", \"700px\"], [3, \"draggable\", \"dragend\", \"drop\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\", 2, \"overflow-y\", \"auto\"], [\"id\", \"en cours\", 1, \"card-body\", 2, \"overflow-y\", \"auto\", \"max-height\", \"500px\"], [3, \"draggable\", \"drop\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [\"id\", \"termin\\u00E9\", 1, \"card-body\", 2, \"overflow-y\", \"auto\", \"max-height\", \"454px\"], [1, \"col-md-8\", \"offset-md-4\", 2, \"margin-top\", \"-19%\"], [1, \"card-body\", 2, \"overflow-x\", \"auto\", \"max-width\", \"100%\"], [1, \"places-buttons\"], [1, \"col-md-6\", \"ml-auto\", \"mr-auto\", \"text-center\"], [\"id\", \"\\u00E0 v\\u00E9rifier\", 1, \"card-body\", 2, \"overflow-y\", \"auto\", \"max-height\", \"454px\"], [3, \"draggable\", \"dragend\", \"drop\"], [3, \"type\", \"dismissible\", 4, \"ngIf\"], [3, \"type\", \"dismissible\"], [3, \"draggable\", \"drop\"], [3, \"diabled\"]],\n    template: function ScrumBoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"select\", 1);\n        i0.ɵɵlistener(\"change\", function ScrumBoardComponent_Template_select_change_1_listener($event) {\n          return ctx.getTicketsTacheBySprint($event.target.value);\n        });\n        i0.ɵɵelementStart(2, \"option\", 2);\n        i0.ɵɵtext(3, \"-- S\\u00E9lectionner un sprint --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, ScrumBoardComponent_option_4_Template, 2, 3, \"option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, ScrumBoardComponent_div_5_Template, 32, 4, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sprints);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.ticketsTache);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i7.NgbAlert, i5.DatePipe]\n  });\n  return ScrumBoardComponent;\n}();\nexport { ScrumBoardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}