{"ast":null,"code":"import Chart from 'chart.js';\nimport { HistoireTicketService } from 'src/app/service/histoire-ticket.service';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sprint.service\";\nimport * as i2 from \"src/app/service/product-backlog.service\";\nimport * as i3 from \"src/app/service/histoire-ticket.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CourbesComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var sprint_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", sprint_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(sprint_r3.objectif);\n  }\n}\nfunction CourbesComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Tickets pour \", ctx_r1.selectedSprint.objectif, \"\");\n  }\n}\nfunction CourbesComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ticket_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ticket_r4.titre);\n  }\n}\nvar CourbesComponent = /** @class */function () {\n  function CourbesComponent(sprintService, productBacklogService, histoireTicketService) {\n    this.sprintService = sprintService;\n    this.productBacklogService = productBacklogService;\n    this.histoireTicketService = histoireTicketService;\n  }\n  CourbesComponent.prototype.ngOnInit = function () {};\n  CourbesComponent.prototype.onSelect = function (sprintId) {\n    var _this = this;\n    console.log(\"Sprint sélectionné :\", sprintId);\n    this.selectedSprint = this.sprints.find(function (sprint) {\n      return sprint.id === sprintId;\n    });\n    this.histoireTicketService.getHistoireTicketBySprintId(sprintId).subscribe(function (data) {\n      _this.tickets = data;\n      console.log(\"Tickets pour le sprint sélectionné :\", _this.tickets);\n      _this.createBurnDownChart();\n    }, function (error) {\n      console.error(error);\n    });\n  };\n  CourbesComponent.prototype.createBurnDownChart = function () {\n    var dates = this.getDates();\n    var idealLine = this.getIdealLine(dates);\n    var data = this.getData(dates);\n    if (this.chart) {\n      this.chart.destroy();\n    }\n    this.chart = new Chart('burnDownChart', {\n      type: 'line',\n      data: {\n        labels: dates,\n        datasets: [{\n          label: 'Effort restant',\n          data: data,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }, {\n          label: 'Effort idéal',\n          data: idealLine,\n          fill: false,\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  };\n  CourbesComponent.prototype.getDates = function () {\n    var startDate = new Date(this.selectedSprint.dateLancement);\n    var endDate = new Date(this.selectedSprint.dateFin);\n    var dates = [];\n    var currentDate = startDate;\n    while (currentDate <= endDate) {\n      dates.push(this.formatDate(currentDate));\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return dates;\n  };\n  CourbesComponent.prototype.formatDate = function (date) {\n    var day = date.getDate();\n    var month = date.getMonth() + 1;\n    var year = date.getFullYear();\n    return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n  };\n  CourbesComponent.prototype.getIdealLine = function (dates) {\n    var totalEffort = this.getTotalEffort();\n    var velocity = this.selectedSprint.velocite;\n    var idealLine = [];\n    var remainingEffort = totalEffort;\n    for (var i = 0; i < dates.length; i++) {\n      var daysLeft = dates.length - i;\n      var dailyEffort = totalEffort / daysLeft;\n      var idealEffort = velocity * i;\n      remainingEffort -= dailyEffort;\n      idealLine.push(totalEffort - idealEffort);\n    }\n    return idealLine;\n  };\n  CourbesComponent.ɵfac = function CourbesComponent_Factory(t) {\n    return new (t || CourbesComponent)(i0.ɵɵdirectiveInject(i1.SprintService), i0.ɵɵdirectiveInject(i2.ProductBacklogService), i0.ɵɵdirectiveInject(i3.HistoireTicketService));\n  };\n  CourbesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourbesComponent,\n    selectors: [[\"app-courbes\"]],\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"page\"], [3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function CourbesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"select\", 1);\n        i0.ɵɵlistener(\"change\", function CourbesComponent_Template_select_change_1_listener($event) {\n          return ctx.onSelect($event.target.value);\n        });\n        i0.ɵɵelementStart(2, \"option\", 2);\n        i0.ɵɵtext(3, \"S\\u00E9lectionner un sprint\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, CourbesComponent_option_4_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, CourbesComponent_div_5_Template, 3, 1, \"div\", 4);\n        i0.ɵɵelementStart(6, \"ul\");\n        i0.ɵɵtemplate(7, CourbesComponent_li_7_Template, 2, 1, \"li\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sprints);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedSprint);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tickets);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption],\n    styles: [\".page[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 200px;\\n  right: -500px;\\n}\"]\n  });\n  return CourbesComponent;\n}();\nexport { CourbesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}