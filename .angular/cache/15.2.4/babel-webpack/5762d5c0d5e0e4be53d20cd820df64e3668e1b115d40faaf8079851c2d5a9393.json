{"ast":null,"code":"import Chart from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"src/app/pages/list-membre-projet/list-membre-projet.component\";\nvar _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nfunction DashboardComponent_div_18_label_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 17);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_18_label_13_Template_label_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r7);\n      var i_r5 = restoredCtx.index;\n      var ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onSprintSelected(i_r5));\n    });\n    i0.ɵɵelement(1, \"input\", 18);\n    i0.ɵɵelementStart(2, \"span\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 20);\n    i0.ɵɵelement(5, \"i\", 21);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var i_r5 = ctx.index;\n    var ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, i_r5 === ctx_r2.sprintSelectedIndex));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", i_r5 === ctx_r2.sprintSelectedIndex);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Sprint \", i_r5 + 1, \" \");\n  }\n}\nfunction DashboardComponent_div_18_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"canvas\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var sprint_r8 = ctx.$implicit;\n    var i_r9 = ctx.index;\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"canvas-\", sprint_r8.id, \"\");\n    i0.ɵɵproperty(\"hidden\", ctx_r3.sprintSelectedIndex !== i_r9);\n  }\n}\nfunction DashboardComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 1)(5, \"div\", 5)(6, \"h5\", 6);\n    i0.ɵɵelement(7, \"i\", 9);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 13)(12, \"div\", 14);\n    i0.ɵɵtemplate(13, DashboardComponent_div_18_label_13_Template, 6, 5, \"label\", 15);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(14, DashboardComponent_div_18_div_14_Template, 2, 2, \"div\", 16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(9, 4, ctx_r1.sprints[ctx_r1.sprintSelectedIndex].dateLancement), \" - \", i0.ɵɵpipeBind1(10, 6, ctx_r1.sprints[ctx_r1.sprintSelectedIndex].dateFin), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.sprints);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.sprints);\n  }\n}\nvar DashboardComponent = /** @class */function () {\n  function DashboardComponent() {\n    this.clicked = true;\n    this.clicked1 = false;\n    this.clicked2 = false;\n  }\n  DashboardComponent.prototype.ngOnInit = function () {\n    var gradientChartOptionsConfigurationWithTooltipBlue = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#2380f7\"\n          }\n        }],\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.1)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#2380f7\"\n          }\n        }]\n      }\n    };\n    var gradientChartOptionsConfigurationWithTooltipPurple = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }],\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(225,78,202,0.1)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }]\n      }\n    };\n    var gradientChartOptionsConfigurationWithTooltipRed = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }],\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(233,32,16,0.1)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9a9a9a\"\n          }\n        }]\n      }\n    };\n    var gradientChartOptionsConfigurationWithTooltipOrange = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 110,\n            padding: 20,\n            fontColor: \"#ff8a76\"\n          }\n        }],\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(220,53,69,0.1)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#ff8a76\"\n          }\n        }]\n      }\n    };\n    var gradientChartOptionsConfigurationWithTooltipGreen = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.0)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }],\n        xAxes: [{\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(0,242,195,0.1)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }]\n      }\n    };\n    var gradientBarChartConfiguration = {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        backgroundColor: '#f5f5f5',\n        titleFontColor: '#333',\n        bodyFontColor: '#666',\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      responsive: true,\n      scales: {\n        yAxes: [{\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.1)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            color: 'rgba(29,140,248,0.1)',\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }]\n      }\n    };\n    this.canvas = document.getElementById(\"chartLineRed\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, 'rgba(233,32,16,0.2)');\n    gradientStroke.addColorStop(0.4, 'rgba(233,32,16,0.0)');\n    gradientStroke.addColorStop(0, 'rgba(233,32,16,0)'); //red colors\n    var data = {\n      labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n      datasets: [{\n        label: \"Data\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: '#ec250d',\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: '#ec250d',\n        pointBorderColor: 'rgba(255,255,255,0)',\n        pointHoverBackgroundColor: '#ec250d',\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [80, 100, 70, 80, 120, 80]\n      }]\n    };\n    var myChart = new Chart(this.ctx, {\n      type: 'line',\n      data: data,\n      options: gradientChartOptionsConfigurationWithTooltipRed\n    });\n    this.canvas = document.getElementById(\"chartLineGreen\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, 'rgba(66,134,121,0.15)');\n    gradientStroke.addColorStop(0.4, 'rgba(66,134,121,0.0)'); //green colors\n    gradientStroke.addColorStop(0, 'rgba(66,134,121,0)'); //green colors\n    var data = {\n      labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: '#00d6b4',\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: '#00d6b4',\n        pointBorderColor: 'rgba(255,255,255,0)',\n        pointHoverBackgroundColor: '#00d6b4',\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [90, 27, 60, 12, 80]\n      }]\n    };\n    var myChart = new Chart(this.ctx, {\n      type: 'line',\n      data: data,\n      options: gradientChartOptionsConfigurationWithTooltipGreen\n    });\n    var chart_labels = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n    this.datasets = [[100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100], [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120], [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]];\n    this.data = this.datasets[0];\n    this.canvas = document.getElementById(\"chartBig1\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, 'rgba(233,32,16,0.2)');\n    gradientStroke.addColorStop(0.4, 'rgba(233,32,16,0.0)');\n    gradientStroke.addColorStop(0, 'rgba(233,32,16,0)'); //red colors\n    var config = {\n      type: 'line',\n      data: {\n        labels: chart_labels,\n        datasets: [{\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: '#ec250d',\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: '#ec250d',\n          pointBorderColor: 'rgba(255,255,255,0)',\n          pointHoverBackgroundColor: '#ec250d',\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: this.data\n        }]\n      },\n      options: gradientChartOptionsConfigurationWithTooltipRed\n    };\n    this.myChartData = new Chart(this.ctx, config);\n    this.canvas = document.getElementById(\"CountryChart\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\n    gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\n    gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors\n    var myChart = new Chart(this.ctx, {\n      type: 'bar',\n      responsive: true,\n      legend: {\n        display: false\n      },\n      data: {\n        labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n        datasets: [{\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: '#1f8ef1',\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45]\n        }]\n      },\n      options: gradientBarChartConfiguration\n    });\n  };\n  DashboardComponent.prototype.updateOptions = function () {\n    this.myChartData.data.datasets[0].data = this.data;\n    this.myChartData.update();\n  };\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)();\n  };\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 20,\n    vars: 8,\n    consts: [[1, \"content\"], [1, \"row\"], [1, \"col-12\"], [1, \"card\", \"card-chart\"], [1, \"card-header\"], [1, \"col-sm-6\", \"text-left\"], [1, \"card-category\", 2, \"color\", \"rgb(226, 226, 226)\"], [1, \"fa-solid\", \"fa-bars-progress\"], [1, \"card-category\", 2, \"color\", \"rgb(226, 226, 226)\", \"float\", \"right\"], [1, \"fas\", \"fa-calendar-alt\"], [1, \"card-body\"], [\"myChart\", \"\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"col-sm-6\"], [\"data-toggle\", \"buttons\", 1, \"btn-group\", \"btn-group-toggle\", \"float-right\"], [\"class\", \"btn btn-sm btn-secondary btn-simple\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-sm\", \"btn-secondary\", \"btn-simple\", 3, \"ngClass\", \"click\"], [\"type\", \"radio\", \"name\", \"options\", 3, \"checked\"], [1, \"d-none\", \"d-sm-block\", \"d-md-block\", \"d-lg-block\", \"d-xl-block\"], [1, \"d-block\", \"d-sm-none\"], [1, \"tim-icons\", \"icon-single-02\"], [3, \"id\", \"hidden\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 1)(6, \"div\", 5)(7, \"h3\", 6);\n        i0.ɵɵelement(8, \"i\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"h3\", 8);\n        i0.ɵɵelement(12, \"i\", 9);\n        i0.ɵɵtext(13);\n        i0.ɵɵpipe(14, \"date\");\n        i0.ɵɵpipe(15, \"date\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(16, \"canvas\", 10, 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(18, DashboardComponent_div_18_Template, 15, 8, \"div\", 12);\n        i0.ɵɵelement(19, \"app-list-membre-projet\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\" Projet (\", ctx.projet.nom, \")\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(14, 4, ctx.projet.dateDebut), \" - \", i0.ɵɵpipeBind1(15, 6, ctx.projet.dateFin), \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.sprints == null ? null : ctx.sprints.length) != 0);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.ListMembreProjetComponent, i1.DatePipe],\n    encapsulation: 2\n  });\n  return DashboardComponent;\n}();\nexport { DashboardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}