{"ast":null,"code":"import Chart from 'chart.js';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sprint.service\";\nimport * as i2 from \"src/app/service/product-backlog.service\";\nimport * as i3 from \"@angular/common\";\nfunction CourbesComponent_div_0_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ticket_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ticket_r3.title, \" (\", ticket_r3.effort, \" points) \");\n  }\n}\nfunction CourbesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"canvas\", 1);\n    i0.ɵɵelementStart(4, \"ul\");\n    i0.ɵɵtemplate(5, CourbesComponent_div_0_li_5_Template, 2, 2, \"li\", 0);\n    i0.ɵɵpipe(6, \"filterBySprint\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var sprint_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Sprint \", sprint_r1.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"canvas\", sprint_r1.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(6, 3, ctx_r0.tickets, sprint_r1.id));\n  }\n}\nvar CourbesComponent = /** @class */function () {\n  function CourbesComponent(sprintService, productBacklogService) {\n    this.sprintService = sprintService;\n    this.productBacklogService = productBacklogService;\n    this.tickets = [{\n      id: 1,\n      idSprint: 1,\n      title: 'Ticket 1',\n      startDate: new Date('2023-04-01'),\n      endDate: new Date('2023-04-03'),\n      effort: 2 // effort de ce ticket histoire\n    }, {\n      id: 2,\n      idSprint: 1,\n      title: 'Ticket 2',\n      startDate: new Date('2023-04-02'),\n      endDate: new Date('2023-04-05'),\n      effort: 3\n    }, {\n      id: 3,\n      idSprint: 2,\n      title: 'Ticket 3',\n      startDate: new Date('2023-04-03'),\n      endDate: new Date('2023-04-08'),\n      effort: 8\n    }, {\n      id: 4,\n      idSprint: 2,\n      title: 'Ticket 4',\n      startDate: new Date('2023-04-05'),\n      endDate: new Date('2023-04-11'),\n      effort: 13\n    }];\n    this.charts = [];\n  }\n  CourbesComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.sprintService.getSprints().subscribe(function (data) {\n      _this.sprints = data;\n      var _loop_1 = function (i) {\n        var sprint = _this.sprints[i];\n        var sprintTickets = _this.tickets.filter(function (ticket) {\n          return ticket.idSprint === sprint.id;\n        });\n        var chart = new Chart(\"canvas\".concat(sprint.id), {\n          type: 'line',\n          data: {\n            labels: [],\n            datasets: [{\n              label: 'Effort restant',\n              data: [],\n              borderColor: 'blue',\n              fill: false\n            }, {\n              label: 'Tendance idéale',\n              data: _this.generateIdealTrend(sprint),\n              borderColor: 'green',\n              fill: false\n            }]\n          },\n          options: {\n            title: {\n              display: true,\n              text: \"Burn Down Chart - Sprint \".concat(sprint.id)\n            },\n            scales: {\n              xAxes: [{\n                type: 'time',\n                time: {\n                  unit: 'day',\n                  tooltipFormat: 'll'\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true,\n                  stepSize: 1\n                }\n              }]\n            }\n          }\n        });\n        // génère les données pour l'axe X (dates) et pour l'axe Y (effort restant)\n        var labels = [];\n        var data_1 = [];\n        var remainingEffort = sprint.velocity;\n        labels.push(sprint.startDate);\n        data_1.push(remainingEffort);\n        for (var j = 0; j < sprintTickets.length; j++) {}\n      };\n      for (var i = 0; i < _this.sprints.length; i++) {\n        _loop_1(i);\n      }\n    });\n  };\n  CourbesComponent.ɵfac = function CourbesComponent_Factory(t) {\n    return new (t || CourbesComponent)(i0.ɵɵdirectiveInject(i1.SprintService), i0.ɵɵdirectiveInject(i2.ProductBacklogService));\n  };\n  CourbesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourbesComponent,\n    selectors: [[\"app-courbes\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"chart\", 3, \"id\"]],\n    template: function CourbesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CourbesComponent_div_0_Template, 7, 6, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.sprints);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\".chart[_ngcontent-%COMP%] {\\n  height: 300px;\\n  width: 500px;\\n}\"]\n  });\n  return CourbesComponent;\n}();\nexport { CourbesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}