{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ProductBacklog } from 'src/app/model/product-backlog';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { Membre } from 'src/app/model/membre';\nimport { ProjetServiceService } from 'src/app/service/projet-service.service';\nvar SelectProjetComponent = /** @class */function () {\n  function SelectProjetComponent(projetService, productBacklogService, formBuilder, router) {\n    this.projetService = projetService;\n    this.productBacklogService = productBacklogService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.valid = false;\n    /* detail balise */\n    this.panelOpenState = false;\n    this.panelOpenState2 = false;\n    this.step = 0;\n    /** end */\n    this.membres = new FormControl('');\n    this.membreList = [new Membre(), new Membre(), new Membre(), new Membre(), new Membre(), new Membre()];\n    this.cochedMembre = [];\n    this.animalControl = new FormControl(null, Validators.required);\n    this.selectFormControl = new FormControl('', Validators.required);\n    this.animals = [{\n      name: 'Dog',\n      sound: 'Woof!'\n    }, {\n      name: 'Cat',\n      sound: 'Meow!'\n    }, {\n      name: 'Cow',\n      sound: 'Moo!'\n    }, {\n      name: 'Fox',\n      sound: 'Wa-pa-pa-pa-pa-pa-pow!'\n    }];\n    this.asyncTabs = new Observable(function (observer) {\n      /*   les type des action gerer par se composant :: les sliders   */\n      setTimeout(function () {\n        observer.next([{\n          label: 'Gerer',\n          content: 'Content 1'\n        }, {\n          label: 'nouveau',\n          content: 'Content 2'\n        }, {\n          label: 'Invitation',\n          content: 'Content 3'\n        }]);\n      }, 1000);\n    });\n  }\n  SelectProjetComponent.prototype.ngOnInit = function () {\n    /*   initialisation de formulaire d'ajout de projet   */\n    var _this = this;\n    this.projetForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      dateDebut: ['', Validators.required],\n      dateFin: ['', Validators.required],\n      cles: ['', Validators.required],\n      chefProjetId: 1\n    });\n    this.projetService.getListProjetChefProjet(1).subscribe(function (data) {\n      _this.projets = data;\n    });\n  };\n  /*   un seul projet peut etre gerer en temps real    */\n  SelectProjetComponent.prototype.cocherProjet = function (index) {\n    this.valid = !this.valid;\n    this.projets[index].checked = !this.projets[index].checked;\n  };\n  SelectProjetComponent.prototype.gerer = function (index) {\n    if (confirm(\"Vous etes sûr de gerer le projet \" + this.projets[index].nom + \" !!\")) {\n      localStorage.setItem('projetCourant', JSON.stringify(this.projets[index]));\n      this.router.navigateByUrl('/dashboard');\n    }\n  };\n  SelectProjetComponent.prototype.onCancel = function () {\n    this.projetForm.reset();\n  };\n  SelectProjetComponent.prototype.onSubmit = function () {\n    var _this = this;\n    console.log(this.projetForm.value);\n    this.projetService.ajouterProjetByChef(this.projetForm.value).subscribe(function (projet) {\n      _this.projet = projet;\n      localStorage.setItem('projet', JSON.stringify(_this.projet));\n      var productBacklog = new ProductBacklog();\n      _this.productBacklogService.createProductBacklog(productBacklog, _this.projet.id).subscribe(function (data) {\n        console.log('Product backlog créé avec succès:', data);\n      }, function (error) {\n        console.error('Erreur lors de la création du product backlog:', error);\n      });\n    }, function (error) {\n      console.error('Erreur lors de la création du projet:', error);\n    });\n  };\n  SelectProjetComponent.prototype.setStep = function (index) {\n    this.step = index;\n  };\n  SelectProjetComponent.prototype.nextStep = function () {\n    this.step++;\n  };\n  SelectProjetComponent.prototype.prevStep = function () {\n    this.step--;\n  };\n  SelectProjetComponent = __decorate([Component({\n    selector: 'app-select-projet',\n    templateUrl: './select-projet.component.html',\n    styleUrls: ['./select-projet.component.scss']\n  }), __metadata(\"design:paramtypes\", [ProjetServiceService, ProductBacklogService, FormBuilder, Router])], SelectProjetComponent);\n  return SelectProjetComponent;\n}();\nexport { SelectProjetComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}