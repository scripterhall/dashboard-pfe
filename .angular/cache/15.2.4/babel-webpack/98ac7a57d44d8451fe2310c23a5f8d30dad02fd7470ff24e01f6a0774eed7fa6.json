{"ast":null,"code":"import { HistoireTicketService } from 'src/app/service/histoire-ticket.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/histoire-ticket.service\";\nimport * as i2 from \"src/app/service/sprint.service\";\nvar CourbesComponent = /** @class */function () {\n  function CourbesComponent(ticketHistoireService, sprintService) {\n    this.ticketHistoireService = ticketHistoireService;\n    this.sprintService = sprintService;\n  }\n  CourbesComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    var sprintId = 1; // Remplacez 1 par l'ID du sprint que vous voulez afficher\n    this.sprintService.getSprintById(sprintId).subscribe(function (sprint) {\n      _this.ticketHistoireService.getHistoireTicketBySprintId(sprint.id).subscribe(function (tickets) {\n        var velocity = tickets.reduce(function (acc, t) {\n          return acc + t.effort;\n        }, 0);\n        var startDate = new Date(sprint.dateLancement);\n        var endDate = new Date(sprint.dateFin);\n        var numDays = Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n        var data = [];\n        for (var i = 0; i < numDays; i++) {\n          var day = new Date(startDate);\n          day.setDate(startDate.getDate() + i);\n          var remainingEffort = tickets.filter(function (t) {\n            return t.sprintId === sprint.id;\n          }).reduce(function (acc, t) {\n            return acc + t.effort;\n          }, 0) - velocity / numDays * i;\n          var expectedEffort = velocity - velocity / numDays * i;\n          console.log('Day ' + (i + 1) + ': ' + day.toDateString() + ', remaining effort: ' + remainingEffort + ', expected effort: ' + expectedEffort + ', velocity: ' + velocity + ', numDays: ' + numDays + ', i: ' + i + 1);\n          data.push({\n            day: day.toDateString(),\n            remainingEffort: remainingEffort,\n            expectedEffort: expectedEffort\n          });\n        }\n        var canvas = document.getElementById('sprint-down-chart');\n        _this.chart = new Chart(canvas, {\n          type: 'line',\n          data: {\n            labels: data.map(function (d) {\n              return d.day;\n            }),\n            datasets: [{\n              label: 'Effort restant',\n              data: data.map(function (d) {\n                return d.remainingEffort;\n              }),\n              borderColor: 'blue',\n              fill: false\n            }, {\n              label: 'Effort attendu',\n              data: data.map(function (d) {\n                return d.expectedEffort;\n              }),\n              borderColor: 'red',\n              fill: false\n            }]\n          },\n          options: {\n            title: {\n              display: true,\n              text: \"Sprint \".concat(sprint.id)\n            },\n            scales: {\n              yAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Effort (points)'\n                },\n                ticks: {\n                  beginAtZero: true\n                }\n              }],\n              xAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Jour'\n                }\n              }]\n            }\n          }\n        });\n      });\n    });\n  };\n  CourbesComponent.ɵfac = function CourbesComponent_Factory(t) {\n    return new (t || CourbesComponent)(i0.ɵɵdirectiveInject(i1.HistoireTicketService), i0.ɵɵdirectiveInject(i2.SprintService));\n  };\n  CourbesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourbesComponent,\n    selectors: [[\"app-courbes\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"container\"], [\"id\", \"canvas\"]],\n    template: function CourbesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"canvas\", 1);\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return CourbesComponent;\n}();\nexport { CourbesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}