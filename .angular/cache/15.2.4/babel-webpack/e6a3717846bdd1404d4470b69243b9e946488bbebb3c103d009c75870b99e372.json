{"ast":null,"code":"import { __assign, __decorate, __metadata } from \"tslib\";\nimport { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CdkDropList, moveItemInArray, transferArrayItem } from \"@angular/cdk/drag-drop\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Component, ElementRef, HostBinding, ViewChild } from \"@angular/core\";\nimport { SprintDialogPanelComponent } from \"../dialogs/sprint-dialog-panel/sprint-dialog-panel.component\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HistoireTicketService } from \"src/app/service/histoire-ticket.service\";\nimport { SprintService } from \"src/app/service/sprint.service\";\nimport { MembreService } from \"src/app/service/membre.service\";\nimport { ConfirmDialogComponent } from \"../confirm-dialog/confirm-dialog.component\";\nimport { ConfirmDialogDeleteUserStoryComponent } from \"../confirm-dialog-delete-user-story/confirm-dialog-delete-user-story.component\";\nimport { ConfirmAddUserStoryDialogueComponent } from \"../confirm-add-user-story-dialogue/confirm-add-user-story-dialogue.component\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { UpdateUserStoryDialogComponent } from \"../update-user-story-dialog/update-user-story-dialog.component\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { AjouterTicketHistoireFormComponent } from \"../ajouter-ticket-histoire-form/ajouter-ticket-histoire-form.component\";\nimport { AjouterSprintFormComponent } from \"../ajouter-sprint-form/ajouter-sprint-form.component\";\nimport { ProductBacklogService } from \"src/app/service/product-backlog.service\";\nvar updateTicketPositionUrl = \"http://localhost:9999/gestion-histoire-ticket/histoireTickets/position\";\nvar IconsComponent = /** @class */function () {\n  function IconsComponent(histoireTicketService, httpClient, productBacklogService, sprintService, dialog, dialogDetailSprint, membreService, toastr, snackBar) {\n    this.histoireTicketService = histoireTicketService;\n    this.httpClient = httpClient;\n    this.productBacklogService = productBacklogService;\n    this.sprintService = sprintService;\n    this.dialog = dialog;\n    this.dialogDetailSprint = dialogDetailSprint;\n    this.membreService = membreService;\n    this.toastr = toastr;\n    this.snackBar = snackBar;\n    this.elementCreated = false;\n    this.fadeOut = false;\n    this.clickCount = 0;\n  }\n  IconsComponent.prototype.drop = function (event) {\n    if (event.previousContainer === event.container) {\n      console.log('dropped', event);\n      var sprintId = this.sprints[event.currentIndex].id;\n      console.log('sprintId', sprintId);\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      var item = event.previousContainer.data[event.previousIndex];\n      if (item.productBacklogId !== null) {\n        var dialogRef = this.dialog.open(ConfirmAddUserStoryDialogueComponent, {\n          width: '650px',\n          height: '440px',\n          data: {\n            item: item\n          }\n        });\n      } else {\n        var productBacklogId = this.getProductBacklogByIdFromLocalStorage();\n        var updatedItem = __assign(__assign({}, item), {\n          productBacklogId: productBacklogId\n        });\n        this.assignUserStoryToProductBacklog(item.id, productBacklogId);\n        console.log(\"Elémént déplacé: \", item);\n        this.toastr.success(\"Le ticket histoire est d\\u00E9plac\\u00E9\");\n        transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n      }\n    }\n  };\n  IconsComponent.prototype.deleteUserStoryById = function (id) {\n    var _this = this;\n    var dialogRef = this.dialog.open(ConfirmDialogDeleteUserStoryComponent, {\n      width: '250px',\n      data: 'Êtes-vous sûr de vouloir supprimer cet élément ?'\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      if (result) {\n        _this.histoireTicketService.deleteUserStoryById(id).subscribe(function (data) {\n          console.log(data);\n          var index = _this.histoireTicketsByMembreId.findIndex(function (item) {\n            return item.id === id;\n          });\n          if (index !== -1) {\n            _this.histoireTicketsByMembreId.splice(index, 1);\n            _this.snackBar.open('Le ticket histoire a été supprimé.', 'Fermer', {\n              duration: 3000\n            });\n          }\n        });\n      }\n    });\n  };\n  IconsComponent.prototype.getHistoireTicketsByProductBacklogId = function (productBacklogId) {\n    var _this = this;\n    this.productBacklogService.getHistoireTicketsByProductBacklogId(productBacklogId).subscribe(function (histoireTicketsByProductBacklogId) {\n      return _this.histoireTicketsByProductBacklogId = histoireTicketsByProductBacklogId;\n    });\n  };\n  IconsComponent.prototype.getProjetByIdFromLocalStorage = function () {\n    var projetCourantStr = localStorage.getItem(\"projetCourant\");\n    var projetCourantObj = JSON.parse(projetCourantStr);\n    var id = projetCourantObj.id;\n    console.log(\"id projet courant = \" + id);\n    return id;\n  };\n  IconsComponent.prototype.removeUserStoryFromProductBacklog = function (id) {\n    var _this = this;\n    event.stopPropagation();\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: 'Êtes-vous sûr de vouloir supprimer cet élément ?'\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      if (result) {\n        _this.histoireTicketService.removeUserStoryFromProductBacklog(id).subscribe(function (response) {\n          console.log(\"Ticket histoire supprimé avec succès.\");\n        });\n        var index = _this.histoireTicketsByProductBacklogId.findIndex(function (item) {\n          return item.id === id;\n        });\n        if (index !== -1) {\n          _this.histoireTicketsByProductBacklogId.splice(index, 1);\n        }\n      }\n    });\n  };\n  IconsComponent.prototype.openDialogDetailsSprint = function (i, sp) {\n    var _this = this;\n    console.log(sp.id);\n    var startedOne;\n    var testStart;\n    if (this.sprints.length > 2) {\n      startedOne = this.sprints[i - 1];\n      testStart = startedOne.etat != 'terminé';\n    } else {\n      startedOne = this.sprints[i];\n      testStart = false;\n    }\n    console.log(sp);\n    this.histoireTicketService.getHistoireTicketBySprintId(sp.id).subscribe(function (data) {\n      _this.histoireTicketsSprint = data;\n      var dialogRef = _this.dialog.open(SprintDialogPanelComponent, {\n        width: '600px',\n        height: '690px',\n        data: {\n          sprint: _this.sprints[i],\n          TicketHistoires: _this.histoireTicketsSprint,\n          canStart: testStart\n        }\n      });\n      dialogRef.afterClosed().subscribe(function (result) {\n        _this.ngOnInit();\n      });\n    });\n  };\n  IconsComponent.prototype.getProductBacklogByIdFromLocalStorage = function () {\n    var productBacklogCourantStr = localStorage.getItem(\"productBacklogCourant\");\n    var productBacklogCourantObj = JSON.parse(productBacklogCourantStr);\n    var id = productBacklogCourantObj.id;\n    console.log(\"id product backlog courant = \" + id);\n    return id;\n  };\n  IconsComponent.prototype.assignUserStoryToSprint = function (histoireTicketId, sprintId) {\n    var _this = this;\n    this.histoireTicketService.assignUserStoryToSprint(histoireTicketId, sprintId).subscribe(function (response) {\n      console.log('Histoire ticket affecté au sprint', response);\n      var sprintIndex = _this.sprints.findIndex(function (sprint) {\n        return sprint.id === sprintId;\n      });\n      var selectedSprintValue = \"Sprint \".concat(sprintIndex + 1);\n      _this.toastr.success(\"Histoire ticket affect\\u00E9 au \".concat(selectedSprintValue));\n    }, function (error) {\n      return console.log(error);\n    });\n  };\n  IconsComponent.prototype.assignUserStoryToProductBacklog = function (histoireTicketId, productBacklogId) {\n    this.histoireTicketService.assignUserStoryToProductBacklog(histoireTicketId, productBacklogId).subscribe(function (response) {\n      console.log('Histoire ticket affecté au product backlog avec succès', response);\n    }, function (error) {\n      return console.log(error);\n    });\n  };\n  IconsComponent.prototype.basculerElement = function () {\n    var _a;\n    this.elementCreated = !this.elementCreated;\n    if (this.elementCreated) {\n      this.detailElementRef.nativeElement.classList.remove('col-lg-12');\n      this.detailElementRef.nativeElement.classList.add('col-lg-7');\n    } else {\n      this.fadeOut = true;\n      this.detailElementRef.nativeElement.classList.remove('col-lg-7');\n      this.detailElementRef.nativeElement.classList.add('col-lg-12');\n      (_a = this.detailElementRef.nativeElement) === null || _a === void 0 ? void 0 : _a.setAttribute('[@fadeOut]');\n    }\n  };\n  IconsComponent.prototype.move = function () {\n    this.clickCount++;\n  };\n  IconsComponent.prototype.openDialog = function () {\n    var dialogRef = this.dialog.open(AjouterTicketHistoireFormComponent, {\n      width: '600px',\n      height: '440px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      console.log('The dialog was closed');\n    });\n  };\n  IconsComponent.prototype.openDialogCreateSprint = function () {\n    var dialogRef = this.dialog.open(AjouterSprintFormComponent, {\n      width: '500',\n      height: '400px',\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      console.log('The dialog was closed');\n    });\n  };\n  IconsComponent.prototype.getHistoireTicketsByMembreId = function (membreId) {\n    var _this = this;\n    this.membreService.getHistoireTicketsByMembreId(membreId).subscribe(function (histoireTicketsByMembreId) {\n      return _this.histoireTicketsByMembreId = histoireTicketsByMembreId.filter(function (ticket) {\n        return ticket.productBacklogId !== _this.getProductBacklogByIdFromLocalStorage();\n      });\n    });\n  };\n  IconsComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.productBacklogService.getProductBacklogByIdProjet(this.getProjetByIdFromLocalStorage()).subscribe(function (data) {\n      var productBacklog = data;\n      localStorage.setItem('productBacklogCourant', JSON.stringify(productBacklog));\n      console.log(_this.productBacklog);\n    }, function (error) {\n      console.log('Une erreur s\\'est produite lors de la récupération du product backlog : ', error);\n    });\n    this.getHistoireTicketsByMembreId(1);\n    this.getHistoireTicketsByProductBacklogId(this.getProductBacklogByIdFromLocalStorage());\n    this.sprintService.getListSprintsByProductBacklog(this.getProductBacklogByIdFromLocalStorage()).subscribe(function (data) {\n      _this.sprints = data;\n    });\n  };\n  IconsComponent.prototype.openDialogUpdateUserStory = function (id) {\n    var dialogRef = this.dialog.open(UpdateUserStoryDialogComponent, {\n      width: '500px',\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      console.log('The dialog was closed');\n    });\n  };\n  __decorate([ViewChild('detailElement'), __metadata(\"design:type\", ElementRef)], IconsComponent.prototype, \"detailElementRef\", void 0);\n  __decorate([ViewChild('newElement'), __metadata(\"design:type\", ElementRef)], IconsComponent.prototype, \"newElementRef\", void 0);\n  __decorate([ViewChild('doneList'), __metadata(\"design:type\", CdkDropList)], IconsComponent.prototype, \"doneList\", void 0);\n  __decorate([ViewChild('todoList'), __metadata(\"design:type\", CdkDropList)], IconsComponent.prototype, \"todoList\", void 0);\n  __decorate([HostBinding('@fadeOut'), __metadata(\"design:type\", Object)], IconsComponent.prototype, \"fadeOut\", void 0);\n  IconsComponent = __decorate([Component({\n    selector: \"app-icons\",\n    templateUrl: \"icons.component.html\",\n    styleUrls: ['./icons.component.css'],\n    animations: [trigger('fadeIn', [transition(':enter', [style({\n      opacity: 0\n    }), animate('0.5s ease-in-out', style({\n      opacity: 1\n    }))])]), trigger('fadeOut', [transition(':enter', [style({\n      width: '*'\n    }), animate('2.5s ease-in', style({\n      width: '*'\n    }))])]), trigger('slideIn', [state('in', style({\n      transform: 'translateX(0)'\n    })), transition(':enter', [style({\n      transform: 'translateX(-100%)'\n    }), animate('0.5s ease-in-out', style({\n      transform: 'translateX(0)'\n    }))]), transition(':leave', [style({\n      transform: 'translateX(0)'\n    }), animate('0.5s ease-in-out', style({\n      transform: 'translateX(100%)'\n    }))])]), trigger('slideInSprint', [state('in', style({\n      transform: 'translateX(0)'\n    })), transition(':enter', [style({\n      transform: 'translateX(12%)'\n    }), animate('0.6s ease-in-out', style({\n      transform: 'translateX(0%)'\n    }))]), transition(':leave', [style({\n      transform: 'translateX(0)'\n    }), animate('0.6s ease-in-out', style({\n      transform: 'translateX(-100%)'\n    }))])])]\n  }), __metadata(\"design:paramtypes\", [HistoireTicketService, HttpClient, ProductBacklogService, SprintService, MatDialog, MatDialog, MembreService, ToastrService, MatSnackBar])], IconsComponent);\n  return IconsComponent;\n}();\nexport { IconsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}