{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { ChatBotService } from 'src/app/service/chat-bot.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/chat-bot.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/tooltip\";\nfunction InputChatComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-error\");\n    i0.ÉµÉµtext(1, \" votre question doit se terminer par le caract\\u00E8re '?'. \");\n    i0.ÉµÉµelementEnd();\n  }\n}\nvar InputChatComponent = /** @class */function () {\n  function InputChatComponent(fb, chatService) {\n    this.fb = fb;\n    this.chatService = chatService;\n  }\n  InputChatComponent.prototype.ngOnInit = function () {\n    this.questionForm = this.fb.group({\n      text: [\"\", [Validators.required, this.questionValidateur()]],\n      membreId: 1\n    });\n  };\n  InputChatComponent.prototype.questionValidateur = function () {\n    return function (control) {\n      var value = control.value;\n      if (value && !value.endsWith('?')) {\n        return {\n          'question': true\n        };\n      }\n      return null;\n    };\n  };\n  InputChatComponent.prototype.envoyerQuestion = function () {\n    var _this = this;\n    if (this.questionForm.valid) {\n      this.chatService.poserQuestion(this.questionForm.value).subscribe(function (data) {\n        console.log(data);\n        if (data == \"\") _this.reponse = \"pas de reponse pour cette question DesolÃ© ðŸ˜…\";\n        _this.reponse = data;\n      });\n    } else {\n      console.log(\"error\");\n    }\n  };\n  InputChatComponent.Éµfac = function InputChatComponent_Factory(t) {\n    return new (t || InputChatComponent)(i0.ÉµÉµdirectiveInject(i1.FormBuilder), i0.ÉµÉµdirectiveInject(i2.ChatBotService));\n  };\n  InputChatComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: InputChatComponent,\n    selectors: [[\"app-input-chat\"]],\n    decls: 9,\n    vars: 4,\n    consts: [[1, \"card\"], [3, \"formGroup\"], [1, \"d-flex\", \"flex-row\"], [\"type\", \"text\", \"formControlName\", \"text\", \"placeholder\", \"entrer votre question\", 1, \"rounded-pill\", \"col-lg-11\", 2, \"white-space\", \"pre-wrap\", \"word-wrap\", \"break-word\", 3, \"keydown.enter\"], [\"matTooltip\", \"poser une Question\", 1, \"btn\", \"rounded\", 3, \"matTooltipDisabled\", \"disabled\"], [\"btn\", \"\"], [4, \"ngIf\"]],\n    template: function InputChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"textarea\", 3);\n        i0.ÉµÉµlistener(\"keydown.enter\", function InputChatComponent_Template_textarea_keydown_enter_3_listener() {\n          return ctx.envoyerQuestion();\n        });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"button\", 4, 5)(6, \"mat-icon\");\n        i0.ÉµÉµtext(7, \"send\");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµtemplate(8, InputChatComponent_mat_error_8_Template, 2, 0, \"mat-error\", 6);\n        i0.ÉµÉµelementEnd()();\n      }\n      if (rf & 2) {\n        var _r0 = i0.ÉµÉµreference(5);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.questionForm);\n        i0.ÉµÉµadvance(3);\n        i0.ÉµÉµproperty(\"matTooltipDisabled\", _r0.disabled)(\"disabled\", ctx.questionForm.invalid);\n        i0.ÉµÉµadvance(4);\n        i0.ÉµÉµproperty(\"ngIf\", ctx.questionForm.get(\"text\").hasError(\"question\") && ctx.questionForm.get(\"text\").touched);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ÉµNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.MatError, i5.MatIcon, i6.MatTooltip],\n    styles: [\"textarea[_ngcontent-%COMP%] {\\n  width: 90%;\\n  min-height: 60px;\\n  background-color: transparent;\\n  border: none;\\n  font-family: sans-serif;\\n  color: #fff;\\n  font-size: 17px;\\n  padding-left: 2%;\\n  padding-top: 1%;\\n}\\n\\ntextarea[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n}\"]\n  });\n  return InputChatComponent;\n}();\nexport { InputChatComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}