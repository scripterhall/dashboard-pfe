{"ast":null,"code":"import { __decorate, __metadata, __values } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { HistoireTicketService } from \"src/app/service/histoire-ticket.service\";\nimport { MembreService } from \"src/app/service/membre.service\";\nimport { SprintBacklogService } from \"src/app/service/sprint-backlog.service\";\nimport { SprintService } from \"src/app/service/sprint.service\";\nimport { TicketTacheService } from \"src/app/service/ticket-tache.service\";\nimport { AjoutTacheSpbComponent } from \"../dialogs/ajout-tache-spb/ajout-tache-spb.component\";\nimport { GestionTacheDialogComponent } from \"../dialogs/gestion-tache-dialog/gestion-tache-dialog.component\";\nvar MapComponent = /** @class */function () {\n  function MapComponent(sprintService, ticketHistoireService, ticketTacheService, sprintBacklogService, membreService, dialogAjout, dialogGestion) {\n    this.sprintService = sprintService;\n    this.ticketHistoireService = ticketHistoireService;\n    this.ticketTacheService = ticketTacheService;\n    this.sprintBacklogService = sprintBacklogService;\n    this.membreService = membreService;\n    this.dialogAjout = dialogAjout;\n    this.dialogGestion = dialogGestion;\n    this.sprintBacklogs = [];\n    this.ticketsTache = [];\n    this.taskMap = new Map();\n    this.endDate = new Date('2023-03-31T23:59:59');\n    this.activeIndex = -1;\n  }\n  MapComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.membreService.afficherTousMembres().subscribe(function (data) {\n      _this.listMembre = data;\n    });\n    var productBacklog = JSON.parse(localStorage.getItem('productBacklog'));\n    this.sprintService.getListSprintsByProductBacklog(productBacklog.id).subscribe(function (listSprintData) {\n      console.log(listSprintData);\n      _this.sprintsList = listSprintData;\n      for (var i = 0; i < listSprintData.length; i++) _this.sprintBacklogService.afficherSprintBacklogBySprintId(listSprintData[i].id).subscribe(function (sprintBacklogData) {\n        console.log(sprintBacklogData);\n        _this.sprintBacklogs.push(sprintBacklogData);\n      });\n    });\n  };\n  MapComponent.prototype.afficherDetailSprintBacklog = function (sprintBacklog) {\n    var _this = this;\n    console.log(sprintBacklog.sprint.id);\n    var taskMap = new Map();\n    this.ticketHistoireService.getHistoireTicketBySprintId(sprintBacklog.sprint.id).subscribe(function (data) {\n      var e_1, _a;\n      _this.ticketsHistoireList = data;\n      var _loop_1 = function (ht) {\n        _this.ticketTacheService.getListTicketTacheParHt(ht.id).subscribe(function (listTacheData) {\n          _this.ticketsTache = listTacheData;\n          taskMap.set(ht, _this.ticketsTache);\n          console.log(_this.ticketsTache);\n        });\n      };\n      try {\n        for (var _b = __values(_this.ticketsHistoireList), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var ht = _c.value;\n          _loop_1(ht);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      _this.taskMap = taskMap;\n    });\n  };\n  //choix couleur tache\n  MapComponent.prototype.getBackgroundColor = function (index) {\n    if (index % 2 === 0) {\n      return {\n        'background-color': '#C8F8F3'\n      };\n    } else if (index % 3 == 0 && index % 2 == 0) {\n      return {\n        'background-color': '#F0FCCA'\n      };\n    } else if (index % 3 == 0) {\n      return {\n        'background-color': '#EFF8C2'\n      };\n    } else if (index % 7 == 0) {\n      return {\n        'background-color': '#F8E7C2'\n      };\n    } else if (index == 1) {\n      return {\n        'background-color': '#DDDAD3'\n      };\n    } else {\n      return {};\n    }\n  };\n  MapComponent.prototype.prendreTicket = function (membre, idTicketTache) {\n    var _this = this;\n    this.ticketTacheService.affecterTicketAMembre(membre, idTicketTache).subscribe(function (dataTicket) {\n      _this.ticketsTache.forEach(function (ticket) {\n        if (ticket.id == idTicketTache) {\n          ticket.dateFin = dataTicket.dateFin;\n          ticket.dateLancement = dataTicket.dateLancement;\n          ticket.membre = dataTicket.membre;\n          ticket.membreId = dataTicket.membreId;\n        }\n      });\n    });\n  };\n  MapComponent.prototype.reverseIndex = function (index, length) {\n    return length - index;\n  };\n  MapComponent.prototype.toggleAccordion = function (index) {\n    if (index === this.activeIndex) {\n      this.sprintBacklogs[index].isOpen = false;\n      this.activeIndex = -1;\n    } else {\n      this.sprintBacklogs.forEach(function (item, i) {\n        item.isOpen = i === index ? true : false;\n      });\n      this.activeIndex = index;\n    }\n  };\n  MapComponent.prototype.openAjoutDialog = function (ht, sprintBacklog) {\n    var _this = this;\n    var dialogRef = this.dialogAjout.open(AjoutTacheSpbComponent, {\n      width: '350px',\n      height: '450px',\n      data: {\n        sprintBacklog: sprintBacklog,\n        ticketHistoire: ht\n      }\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      var e_2, _a;\n      if (result) {\n        var ticketHistoire = result.ht;\n        try {\n          for (var _b = __values(_this.taskMap.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            if (key.id === ticketHistoire.id) {\n              var listeTache = _this.taskMap.get(key);\n              listeTache.push(result);\n            }\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    });\n  };\n  MapComponent.prototype.openGestionTache = function (tt) {\n    var _this = this;\n    var dialogRef = this.dialogGestion.open(GestionTacheDialogComponent, {\n      width: '650px',\n      height: '300px',\n      data: {\n        ticketTache: tt\n      }\n    });\n    dialogRef.afterClosed().subscribe(function (result) {\n      var e_3, _a, e_4, _b;\n      console.log(result);\n      if (result.mode == 'modifier') {\n        console.log(\"test\");\n        try {\n          for (var _c = __values(_this.taskMap.keys()), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var key = _d.value;\n            if (key.id === result.tt.ht.id) {\n              var listeTache = _this.taskMap.get(key);\n              listeTache[listeTache.indexOf(tt)] = result.tt;\n            }\n          }\n        } catch (e_3_1) {\n          e_3 = {\n            error: e_3_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n        }\n      } else if (result.mode == 'supprimer') {\n        var ticketHistoire = result.tt.ht;\n        try {\n          for (var _e = __values(_this.taskMap.keys()), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var key = _f.value;\n            if (key.id === ticketHistoire.id) {\n              var listeTache = _this.taskMap.get(key);\n              console.log(listeTache.indexOf(tt));\n              listeTache.splice(listeTache.indexOf(tt), 1);\n            }\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    });\n  };\n  MapComponent = __decorate([Component({\n    selector: \"app-map\",\n    templateUrl: \"map.component.html\",\n    styleUrls: ['./map.component.scss']\n  }), __metadata(\"design:paramtypes\", [SprintService, HistoireTicketService, TicketTacheService, SprintBacklogService, MembreService, MatDialog, MatDialog])], MapComponent);\n  return MapComponent;\n}();\nexport { MapComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}