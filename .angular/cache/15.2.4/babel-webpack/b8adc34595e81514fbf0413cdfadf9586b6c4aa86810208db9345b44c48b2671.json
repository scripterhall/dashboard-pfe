{"ast":null,"code":"import { HistoireTicketService } from 'src/app/service/histoire-ticket.service';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sprint.service\";\nimport * as i2 from \"src/app/service/product-backlog.service\";\nimport * as i3 from \"src/app/service/histoire-ticket.service\";\nvar CourbesComponent = /** @class */function () {\n  function CourbesComponent(sprintService, productBacklogService, histoireTicketService) {\n    this.sprintService = sprintService;\n    this.productBacklogService = productBacklogService;\n    this.histoireTicketService = histoireTicketService;\n    this.sprints = [];\n    this.ticketHistoireList = [];\n  }\n  CourbesComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    var productBacklogId = 1; // remplacez par l'id du product backlog\n    this.sprintService.getListSprintsByProductBacklog(productBacklogId).subscribe(function (sprints) {\n      _this.sprints = sprints;\n    }, function (error) {\n      console.log(error);\n    });\n  };\n  // retourne un tableau avec l'effort estimé pour chaque jour du sprint\n  CourbesComponent.prototype.getEffortEstime = function (sprint) {\n    var effortEstime = [];\n    var currentDate = new Date(sprint.dateLancement);\n    var effortTotal = sprint.velocite;\n    while (currentDate <= sprint.dateFin) {\n      effortEstime.push(effortTotal);\n      currentDate.setDate(currentDate.getDate() + 1);\n      if (currentDate.getDay() === 1) {\n        // lundi, nouvelle semaine\n        effortTotal -= sprint.velocite * 0.1; // réduction de 10% chaque nouvelle semaine\n      }\n    }\n\n    return effortEstime;\n  };\n  // retourne un tableau avec l'effort réel pour chaque jour du sprint\n  CourbesComponent.prototype.getEffortReel = function (sprint, tickets) {\n    var dates = this.getDates(sprint.dateLancement, sprint.dateFin);\n    var effortReel = new Array(dates.length).fill(0);\n    tickets.forEach(function (ticket) {\n      var dateFinTicket = new Date(ticket.dateFin);\n      if (dateFinTicket > sprint.dateFin) {\n        dateFinTicket = sprint.dateFin;\n      }\n      var indexStart = dates.findIndex(function (date) {\n        return date >= ticket.dateDebut;\n      });\n      var indexEnd = dates.findIndex(function (date) {\n        return date >= dateFinTicket;\n      });\n      if (indexStart === -1) {\n        indexStart = 0;\n      }\n      if (indexEnd === -1) {\n        indexEnd = dates.length - 1;\n      }\n      for (var i = indexStart; i <= indexEnd; i++) {\n        effortReel[i] += ticket.effort || 0;\n      }\n    });\n    return effortReel;\n  };\n  // retourne un tableau avec toutes les dates entre dateDebut et dateFin inclusivement\n  CourbesComponent.prototype.getDates = function (dateDebut, dateFin) {\n    var dates = [];\n    var currentDate = new Date(dateDebut);\n    while (currentDate <= dateFin) {\n      dates.push(new Date(currentDate));\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return dates;\n  };\n  CourbesComponent.ɵfac = function CourbesComponent_Factory(t) {\n    return new (t || CourbesComponent)(i0.ɵɵdirectiveInject(i1.SprintService), i0.ɵɵdirectiveInject(i2.ProductBacklogService), i0.ɵɵdirectiveInject(i3.HistoireTicketService));\n  };\n  CourbesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourbesComponent,\n    selectors: [[\"app-courbes\"]],\n    decls: 0,\n    vars: 0,\n    template: function CourbesComponent_Template(rf, ctx) {}\n  });\n  return CourbesComponent;\n}();\nexport { CourbesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}