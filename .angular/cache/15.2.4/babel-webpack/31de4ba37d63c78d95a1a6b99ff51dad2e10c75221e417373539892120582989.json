{"ast":null,"code":"import Chart from 'chart.js';\nimport { HistoireTicketService } from 'src/app/service/histoire-ticket.service';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sprint.service\";\nimport * as i2 from \"src/app/service/product-backlog.service\";\nimport * as i3 from \"src/app/service/histoire-ticket.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CourbesComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var s_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", s_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(s_r1.id);\n  }\n}\nvar CourbesComponent = /** @class */function () {\n  function CourbesComponent(sprintService, productBacklogService, histoireTicketService) {\n    this.sprintService = sprintService;\n    this.productBacklogService = productBacklogService;\n    this.histoireTicketService = histoireTicketService;\n  }\n  CourbesComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.sprintService.getListSprintsByProductBacklog(productBacklogId).subscribe(function (sprints) {\n      _this.sprints = sprints;\n      _this.sprint = sprints[0]; // sélectionner le premier sprint par défaut\n      // Récupérer les tickets pour le sprint sélectionné\n      _this.sprintService.getHistoireTicketBySprintId(_this.sprint.id).subscribe(function (tickets) {\n        _this.tickets = tickets;\n        // Générer les données pour le graphique\n        var labels = [];\n        var data = [];\n        var remainingEffort = _this.sprint.velocity;\n        labels.push(_this.sprint.startDate);\n        data.push(remainingEffort);\n        for (var i = 0; i < _this.tickets.length; i++) {\n          remainingEffort -= _this.tickets[i].effort;\n          labels.push(_this.tickets[i].endDate);\n          data.push(remainingEffort);\n        }\n        labels.push(_this.sprint.endDate);\n        data.push(0);\n        // Mettre à jour le graphique\n        _this.chart.data.labels = labels;\n        _this.chart.data.datasets[0].data = data;\n        _this.chart.update();\n      });\n    });\n  };\n  CourbesComponent.prototype.loadSprints = function () {\n    var _this = this;\n    this.sprintService.getListSprintsByProductBacklog(productBacklogId).subscribe(function (data) {\n      _this.sprints = data;\n    }, function (error) {\n      console.log(error);\n    });\n  };\n  CourbesComponent.prototype.loadTicketsForSelectedSprint = function () {\n    var _this = this;\n    this.sprintService.getHistoireTicketBySprintId(this.selectedSprintId).subscribe(function (data) {\n      _this.tickets = data;\n      _this.generateChart();\n    }, function (error) {\n      console.log(error);\n    });\n  };\n  CourbesComponent.prototype.generateChart = function () {\n    var labels = [];\n    var data = [];\n    var remainingEffort = this.selectedSprint.velocity;\n    labels.push(this.selectedSprint.startDate);\n    data.push(remainingEffort);\n    for (var i = 0; i < this.tickets.length; i++) {\n      remainingEffort -= this.tickets[i].effort;\n      labels.push(this.tickets[i].endDate);\n      data.push(remainingEffort);\n    }\n    labels.push(this.selectedSprint.endDate);\n    data.push(0);\n    this.chart = new Chart('canvas', {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Effort restant',\n          data: data,\n          borderColor: 'blue',\n          fill: false\n        }, {\n          label: 'Tendance idéale',\n          data: this.generateIdealTrend(),\n          borderColor: 'green',\n          fill: false\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Burn Down Chart'\n        },\n        scales: {\n          xAxes: [{\n            type: 'time',\n            time: {\n              unit: 'day',\n              tooltipFormat: 'll'\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 1\n            }\n          }]\n        }\n      }\n    });\n  };\n  CourbesComponent.prototype.generateIdealTrend = function () {\n    var idealTrend = [];\n    idealTrend.push({\n      x: this.selectedSprint.startDate,\n      y: this.selectedSprint.velocity\n    });\n    idealTrend.push({\n      x: this.selectedSprint.endDate,\n      y: 0\n    });\n    return idealTrend;\n  };\n  CourbesComponent.prototype.onSprintSelected = function () {\n    var _this = this;\n    this.selectedSprint = this.sprints.find(function (sprint) {\n      return sprint.id === _this.selectedSprintId;\n    });\n    this.loadTicketsForSelectedSprint();\n  };\n  CourbesComponent.ɵfac = function CourbesComponent_Factory(t) {\n    return new (t || CourbesComponent)(i0.ɵɵdirectiveInject(i1.SprintService), i0.ɵɵdirectiveInject(i2.ProductBacklogService), i0.ɵɵdirectiveInject(i3.HistoireTicketService));\n  };\n  CourbesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourbesComponent,\n    selectors: [[\"app-courbes\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"canvas\"], [3, \"ngValue\"]],\n    template: function CourbesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CourbesComponent_Template_select_ngModelChange_1_listener($event) {\n          return ctx.sprint = $event;\n        })(\"change\", function CourbesComponent_Template_select_change_1_listener() {\n          return ctx.onSprintChange();\n        });\n        i0.ɵɵtemplate(2, CourbesComponent_option_2_Template, 2, 2, \"option\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelement(4, \"canvas\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.sprint);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sprints);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel]\n  });\n  return CourbesComponent;\n}();\nexport { CourbesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}