{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { map, startWith } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/input\";\nvar _c0 = function (a0) {\n  return {\n    \"display\": a0\n  };\n};\nfunction SearchPanelComponent_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var email_r2 = ctx.$implicit;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx_r1.chercher.value.length == 0 ? \"none\" : \"block\"))(\"value\", email_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", email_r2, \" \");\n  }\n}\nvar SearchPanelComponent = /** @class */function () {\n  function SearchPanelComponent(dialogRef, data) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.chercher = new FormControl(\"\", Validators.required);\n  }\n  SearchPanelComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.emails = this.data.membres.map(function (membre) {\n      return membre.email;\n    });\n    this.filteredOptions = this.chercher.valueChanges.pipe(startWith(''), map(function (emailEcris) {\n      return _this._filter(emailEcris || '');\n    }));\n  };\n  SearchPanelComponent.prototype._filter = function (email) {\n    var filterValue = email.toLowerCase();\n    var dernierValeur = email[email.length - 1];\n    return this.emails.filter(function (email) {\n      return email.toLowerCase().indexOf(dernierValeur) == filterValue.indexOf(dernierValeur) && email.toLowerCase().includes(filterValue);\n    });\n  };\n  SearchPanelComponent.prototype.chercherMembre = function () {\n    if (this.chercher.valid) console.log(this.chercher.value);\n  };\n  SearchPanelComponent.ɵfac = function SearchPanelComponent_Factory(t) {\n    return new (t || SearchPanelComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  SearchPanelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchPanelComponent,\n    selectors: [[\"app-search-panel\"]],\n    decls: 8,\n    vars: 5,\n    consts: [[1, \"d-flex\", \"flex-row\"], [1, \"col-lg-6\"], [\"auto\", \"matAutocomplete\"], [3, \"ngStyle\", \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Visualiser le membre choisis par son email en appuyant sur <Enter>\", \"aria-label\", \"text\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\", \"keydown.enter\"], [3, \"ngStyle\", \"value\"]],\n    template: function SearchPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-dialog-content\", 0)(1, \"div\", 1)(2, \"mat-autocomplete\", null, 2);\n        i0.ɵɵtemplate(4, SearchPanelComponent_mat_option_4_Template, 2, 5, \"mat-option\", 3);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"input\", 4);\n        i0.ɵɵlistener(\"keydown.enter\", function SearchPanelComponent_Template_input_keydown_enter_7_listener() {\n          return ctx.chercherMembre();\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        var _r0 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 3, ctx.filteredOptions));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.chercher)(\"matAutocomplete\", _r0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgStyle, i3.DefaultValueAccessor, i3.NgControlStatus, i4.MatAutocomplete, i5.MatOption, i4.MatAutocompleteTrigger, i1.MatDialogContent, i3.FormControlDirective, i6.MatInput, i2.AsyncPipe],\n    styles: [\"input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0px;\\n  font-family: serif;\\n  border: none;\\n  margin-top: 2%;\\n}\\n\\ninput[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n}\"]\n  });\n  return SearchPanelComponent;\n}();\nexport { SearchPanelComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}