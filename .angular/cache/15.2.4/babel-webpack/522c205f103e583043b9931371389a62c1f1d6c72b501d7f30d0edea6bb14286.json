{"ast":null,"code":"!function (t, i) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = i() : \"function\" == typeof define && define.amd ? define(\"Fireworks\", i) : (t = \"undefined\" != typeof globalThis ? globalThis : t || self).Fireworks = i();\n}(this, function () {\n  \"use strict\";\n\n  /*! *****************************************************************************\n      Copyright (c) Microsoft Corporation.\n  \n      Permission to use, copy, modify, and/or distribute this software for any\n      purpose with or without fee is hereby granted.\n  \n      THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n      PERFORMANCE OF THIS SOFTWARE.\n      ***************************************************************************** */\n  var t = function () {\n    return (t = Object.assign || function (t) {\n      for (var i, s = 1, n = arguments.length; s < n; s++) for (var e in i = arguments[s]) Object.prototype.hasOwnProperty.call(i, e) && (t[e] = i[e]);\n      return t;\n    }).apply(this, arguments);\n  };\n  function i(t, i) {\n    return Math.random() * (i - t) + t;\n  }\n  var s = 2 * Math.PI,\n    n = function () {\n      function t(t) {\n        var n = t.isRocket,\n          e = void 0 !== n && n,\n          o = t.hue,\n          h = void 0 === o ? i(1, 360) : o,\n          r = t.brightness,\n          a = void 0 === r ? i(50, 60) : r,\n          c = t.position;\n        if (this.isRocket = e, this.position = c, this.positions = [this.position, this.position, this.position], this.isRocket) this.velocity = {\n          x: i(-3, 3),\n          y: i(-7, -3)\n        }, this.shrink = .999, this.resistance = 1;else {\n          var l = i(0, s),\n            p = 15 * Math.cos(i(0, s));\n          this.velocity = {\n            x: Math.cos(l) * p,\n            y: Math.sin(l) * p\n          }, this.shrink = i(0, .05) + .93, this.resistance = .92;\n        }\n        this.gravity = .01, this.size = 3, this.alpha = 1, this.fade = 0, this.hue = h, this.brightness = a;\n      }\n      return t.prototype.clone = function () {\n        return new t({\n          position: {\n            x: this.position.x,\n            y: this.position.y\n          },\n          hue: this.hue,\n          brightness: this.brightness\n        });\n      }, t.prototype.shouldRemove = function (t, i) {\n        return this.alpha <= .1 || this.size <= 1 || this.position.x > t || this.position.x < 0 || this.position.y > i || this.position.y < 0;\n      }, t.prototype.shouldExplode = function (t, s, n) {\n        return !!this.isRocket && (this.position.y <= t || !(this.position.y >= s) && i(0, 1) <= n);\n      }, t.prototype.update = function () {\n        this.positions.pop(), this.positions.unshift({\n          x: this.position.x,\n          y: this.position.y\n        }), this.velocity.x *= this.resistance, this.velocity.y *= this.resistance, this.velocity.y += this.gravity, this.position.x += this.velocity.x, this.position.y += this.velocity.y, this.size *= this.shrink, this.alpha -= this.fade;\n      }, t.prototype.draw = function (t) {\n        var i = this.positions[this.positions.length - 1];\n        t.beginPath(), t.moveTo(i.x, i.y), t.lineTo(this.position.x, this.position.y), t.lineWidth = this.size, t.lineCap = \"round\", t.strokeStyle = \"hsla(\" + this.hue + \", 100%, \" + this.brightness + \"%, \" + this.alpha + \")\", t.stroke();\n      }, t;\n    }(),\n    e = function () {\n      function s(t) {\n        var i = t.maxRockets,\n          s = t.numParticles,\n          n = t.cw,\n          e = t.ch,\n          o = t.rocketInitialPoint,\n          h = t.cannons;\n        this._set = new Set(), this.rockets = 0, this.maxRockets = i, this.numParticles = s, this.cw = n, this.ch = e, this.rocketInitialPoint = o, this.cannons = h, this.rocketInitialPoint && this.cannons.push({\n          x: this.rocketInitialPoint,\n          y: this.ch\n        });\n      }\n      return s.prototype.size = function () {\n        return this._set.size;\n      }, s.prototype.entries = function () {\n        return this._set;\n      }, s.prototype.clear = function () {\n        this._set.clear(), this.rockets = 0;\n      }, s.prototype.delete = function (t) {\n        this._set.delete(t), t.isRocket && this.rockets--;\n      }, s.prototype.add = function (t) {\n        this._set.add(t);\n      }, s.prototype.explode = function (t) {\n        for (var i = 0; i < this.numParticles; i += 1) this.add(t.clone());\n        this.delete(t);\n      }, s.prototype.spawnRocket = function () {\n        this.rockets++;\n        var s = Math.floor(i(0, this.cannons.length)),\n          e = this.cannons[s] || {};\n        this.add(new n({\n          isRocket: !0,\n          position: t(t(t({}, e), null == e.x && {\n            x: i(0, this.cw)\n          }), null == e.y && {\n            y: this.ch\n          })\n        }));\n      }, s.prototype.spawnRockets = function () {\n        this.rockets < this.maxRockets && this.spawnRocket();\n      }, s;\n    }();\n  return function () {\n    function t(t, i) {\n      var s = void 0 === i ? {} : i,\n        n = s.rocketSpawnInterval,\n        o = void 0 === n ? 150 : n,\n        h = s.maxRockets,\n        r = void 0 === h ? 3 : h,\n        a = s.numParticles,\n        c = void 0 === a ? 100 : a,\n        l = s.explosionMinHeight,\n        p = void 0 === l ? .2 : l,\n        u = s.explosionMaxHeight,\n        f = void 0 === u ? .9 : u,\n        d = s.explosionChance,\n        v = void 0 === d ? .08 : d,\n        y = s.width,\n        w = void 0 === y ? t.clientWidth : y,\n        x = s.height,\n        m = void 0 === x ? t.clientHeight : x,\n        k = s.rocketInitialPoint,\n        g = void 0 === k ? null : k,\n        R = s.cannons,\n        b = void 0 === R ? [] : R;\n      this.finishCallbacks = [], this.container = t, this.rocketSpawnInterval = o, this.maxRockets = r, this.cw = w, this.ch = m, this.maxH = this.ch * (1 - f), this.minH = this.ch * (1 - p), this.chance = v, this.pixelRatio = window.devicePixelRatio || 1, this.canvas = document.createElement(\"canvas\"), this.ctx = this.canvas.getContext(\"2d\"), t.appendChild(this.canvas), this.things = new e({\n        maxRockets: this.maxRockets,\n        numParticles: c,\n        cw: this.cw,\n        ch: this.ch,\n        rocketInitialPoint: g,\n        cannons: b\n      }), this.updateDimensions();\n    }\n    return t.prototype.destroy = function () {\n      this.canvas.parentElement.removeChild(this.canvas), window.clearInterval(this.interval), window.cancelAnimationFrame(this.rafInterval);\n    }, t.prototype.start = function () {\n      var t = this;\n      if (null == this.interval) return this.interval = window.setInterval(function () {\n        return t.things.spawnRockets();\n      }, this.rocketSpawnInterval), this.rafInterval = window.requestAnimationFrame(function () {\n        return t.update();\n      }), function () {\n        return t.stop();\n      };\n    }, t.prototype.updateDimensions = function () {\n      this.canvas.width = this.cw * this.pixelRatio, this.canvas.height = this.ch * this.pixelRatio, this.canvas.style.width = this.cw + \"px\", this.canvas.style.height = this.ch + \"px\", this.ctx.scale(this.pixelRatio, this.pixelRatio), this.things.cw = this.cw, this.things.ch = this.ch;\n    }, t.prototype.setSize = function (t, i) {\n      this.cw = t, this.ch = i, this.updateDimensions();\n    }, t.prototype.resetSize = function () {\n      this.cw = this.container.clientWidth, this.ch = this.container.clientHeight, this.updateDimensions();\n    }, t.prototype.stop = function () {\n      window.clearInterval(this.interval), this.interval = null;\n    }, t.prototype.kill = function () {\n      this.things.clear(), this.stop(), window.cancelAnimationFrame(this.rafInterval), this._finish();\n    }, t.prototype.fire = function () {\n      var t = this;\n      this.things.spawnRocket(), this.rafInterval || (this.rafInterval = window.requestAnimationFrame(function () {\n        return t.update();\n      }));\n    }, t.prototype.onFinish = function (t) {\n      this.finishCallbacks.push(t);\n    }, t.prototype._clear = function (t) {\n      void 0 === t && (t = !1), this.ctx.globalCompositeOperation = \"destination-out\", this.ctx.fillStyle = \"rgba(0, 0, 0 \" + (t ? \"\" : \", 0.5\") + \")\", this.ctx.fillRect(0, 0, this.cw, this.ch), this.ctx.globalCompositeOperation = \"lighter\";\n    }, t.prototype._finish = function () {\n      this._clear(!0), this.rafInterval = null, this.finishCallbacks.forEach(function (t) {\n        return t();\n      });\n    }, t.prototype.update = function () {\n      var t,\n        i,\n        s = this;\n      this._clear();\n      try {\n        for (var n = function (t) {\n            var i = \"function\" == typeof Symbol && Symbol.iterator,\n              s = i && t[i],\n              n = 0;\n            if (s) return s.call(t);\n            if (t && \"number\" == typeof t.length) return {\n              next: function () {\n                return t && n >= t.length && (t = void 0), {\n                  value: t && t[n++],\n                  done: !t\n                };\n              }\n            };\n            throw new TypeError(i ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n          }(this.things.entries()), e = n.next(); !e.done; e = n.next()) {\n          var o = e.value;\n          o.draw(this.ctx), o.update(), o.shouldRemove(this.cw, this.ch) ? this.things.delete(o) : o.shouldExplode(this.maxH, this.minH, this.chance) && this.things.explode(o);\n        }\n      } catch (i) {\n        t = {\n          error: i\n        };\n      } finally {\n        try {\n          e && !e.done && (i = n.return) && i.call(n);\n        } finally {\n          if (t) throw t.error;\n        }\n      }\n      this.interval || this.things.size() > 0 ? this.rafInterval = window.requestAnimationFrame(function () {\n        return s.update();\n      }) : this._finish();\n    }, t;\n  }();\n});","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}