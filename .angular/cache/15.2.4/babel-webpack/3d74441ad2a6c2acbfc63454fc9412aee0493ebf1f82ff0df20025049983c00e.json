{"ast":null,"code":"import { HistoireTicketService } from 'src/app/service/histoire-ticket.service';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/histoire-ticket.service\";\nimport * as i2 from \"src/app/service/product-backlog.service\";\nimport * as i3 from \"src/app/service/sprint.service\";\nvar CourbesComponent = /** @class */function () {\n  function CourbesComponent(histoireTicketService, productBacklogService, sprintService) {\n    this.histoireTicketService = histoireTicketService;\n    this.productBacklogService = productBacklogService;\n    this.sprintService = sprintService;\n    this.sprintsVelocitySum = 0;\n  }\n  CourbesComponent.prototype.gethistoireTicketsProjet = function (productBacklogId) {\n    var _this = this;\n    this.productBacklogService.getHistoireTicketsByProductBacklogId(productBacklogId).subscribe(function (histoireTicketsProjet) {\n      return _this.histoireTicketsProjet = histoireTicketsProjet;\n    });\n  };\n  CourbesComponent.prototype.getProjetFromLocalStorage = function () {\n    var projetCourantStr = localStorage.getItem(\"projetCourant\");\n    var projetCourantObj = JSON.parse(projetCourantStr);\n    return projetCourantObj;\n  };\n  CourbesComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.gethistoireTicketsProjet(this.productBacklogService.getProductBacklogByIdFromLocalStorage());\n    var projet = this.getProjetFromLocalStorage();\n    var dateDebut = new Date(projet.dateDebut);\n    var dateFin = new Date(projet.dateFin);\n    var diffTemps = dateFin.getTime() - dateDebut.getTime();\n    var diffJours = Math.ceil(diffTemps / (1000 * 60 * 60 * 24));\n    console.log(\"Le projet a une dur\\u00E9e de \".concat(diffJours, \" jours\"));\n    this.sprintService.getListSprintsByProductBacklog(this.productBacklogService.getProductBacklogByIdFromLocalStorage()).subscribe(function (data) {\n      _this.sprints = data;\n      var nbrSprints = data.length;\n      console.log(\"Nombre de sprints: \" + nbrSprints);\n      _this.sprints.forEach(function (sprint) {\n        _this.sprintsVelocitySum += sprint.velocite;\n      });\n      console.log(\"Somme de vélocité des sprints: \" + _this.sprintsVelocitySum);\n    });\n  };\n  CourbesComponent.prototype.test = function () {\n    $('#container').highcharts({\n      title: {\n        text: 'Burndown Chart',\n        x: -20 //center\n      },\n\n      colors: ['blue', 'red'],\n      plotOptions: {\n        line: {\n          lineWidth: 3\n        },\n        tooltip: {\n          hideDelay: 200\n        }\n      },\n      subtitle: {\n        text: 'Sprint 1',\n        x: -20\n      },\n      xAxis: {\n        categories: ['Day 1', 'Day 2', 'Day 3', 'Day 4', 'Day 5', 'Day 6', 'Day 7', 'Day 8', 'Day 9', 'Day 10']\n      },\n      yAxis: {\n        title: {\n          text: 'Hours'\n        },\n        plotLines: [{\n          value: 0,\n          width: 1\n        }]\n      },\n      tooltip: {\n        valueSuffix: ' hrs',\n        crosshairs: true,\n        shared: true\n      },\n      legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle',\n        borderWidth: 0\n      },\n      series: [{\n        name: 'Ideal Burn',\n        color: 'rgba(255,0,0,0.25)',\n        lineWidth: 2,\n        data: [100, 90, 80, 70, 60, 50, 40, 30, 20, 10]\n      }, {\n        name: 'Actual Burn',\n        color: 'rgba(0,120,200,0.75)',\n        marker: {\n          radius: 6\n        },\n        data: [100, 110, 85, 60, 60, 30, 32, 23, 9, 2]\n      }]\n    });\n  };\n  ;\n  CourbesComponent.ɵfac = function CourbesComponent_Factory(t) {\n    return new (t || CourbesComponent)(i0.ɵɵdirectiveInject(i1.HistoireTicketService), i0.ɵɵdirectiveInject(i2.ProductBacklogService), i0.ɵɵdirectiveInject(i3.SprintService));\n  };\n  CourbesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourbesComponent,\n    selectors: [[\"app-courbes\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[\"id\", \"burnDownChart\"]],\n    template: function CourbesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"canvas\", 0);\n      }\n    }\n  });\n  return CourbesComponent;\n}();\nexport { CourbesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}