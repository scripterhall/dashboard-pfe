{"ast":null,"code":"import { HistoireTicketService } from 'src/app/service/histoire-ticket.service';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sprint.service\";\nimport * as i2 from \"src/app/service/product-backlog.service\";\nimport * as i3 from \"src/app/service/histoire-ticket.service\";\nvar CourbesComponent = /** @class */function () {\n  function CourbesComponent(sprintService, productBacklogservice, histoireTicketService) {\n    this.sprintService = sprintService;\n    this.productBacklogservice = productBacklogservice;\n    this.histoireTicketService = histoireTicketService;\n  }\n  CourbesComponent.prototype.ngOnInit = function () {\n    this.canvas = document.getElementById('myChart');\n    this.ctx = this.canvas.getContext('2d');\n    var sprintData = [{\n      id: 1,\n      velocity: 10,\n      dateLancement: new Date(2023, 1, 1),\n      dateFin: new Date(2023, 1, 14)\n    }, {\n      id: 2,\n      velocity: 15,\n      dateLancement: new Date(2023, 1, 15),\n      dateFin: new Date(2023, 1, 28)\n    }, {\n      id: 3,\n      velocity: 20,\n      dateLancement: new Date(2023, 2, 16),\n      dateFin: new Date(2023, 2, 30)\n    }];\n    var ticketData = [{\n      id: 1,\n      idSprint: 1,\n      effort: 3,\n      dateDebut: new Date(2023, 1, 2),\n      dateFin: new Date(2023, 1, 5),\n      etat: 'done'\n    }, {\n      id: 2,\n      idSprint: 1,\n      effort: 5,\n      dateDebut: new Date(2023, 1, 3),\n      dateFin: new Date(2023, 1, 8),\n      etat: 'done'\n    }, {\n      id: 3,\n      idSprint: 1,\n      effort: 2,\n      dateDebut: new Date(2023, 1, 5),\n      dateFin: new Date(2023, 1, 7),\n      etat: 'done'\n    }, {\n      id: 4,\n      idSprint: 2,\n      effort: 7,\n      dateDebut: new Date(2023, 1, 17),\n      dateFin: new Date(2023, 1, 21),\n      etat: 'done'\n    }, {\n      id: 5,\n      idSprint: 2,\n      effort: 3,\n      dateDebut: new Date(2023, 1, 20),\n      dateFin: new Date(2023, 1, 22),\n      etat: 'done'\n    }, {\n      id: 6,\n      idSprint: 2,\n      effort: 5,\n      dateDebut: new Date(2023, 1, 22),\n      dateFin: new Date(2023, 1, 26),\n      etat: 'done'\n    }, {\n      id: 7,\n      idSprint: 3,\n      effort: 8,\n      dateDebut: new Date(2023, 2, 3),\n      dateFin: new Date(2023, 2, 7),\n      etat: 'done'\n    }, {\n      id: 9,\n      idSprint: 3,\n      effort: 5,\n      dateDebut: new Date(2023, 2, 7),\n      dateFin: new Date(2023, 2, 10),\n      etat: 'done'\n    }];\n    var labels = []; // Les étiquettes de l'axe X\n    var data = []; // Les données à tracer\n    // Pour chaque sprint, calculez la date de fin réelle en fonction des tickets terminés\n    var totalEffort = 0;\n    for (var i = 0; i < sprintData.length; i++) {\n      var sprint = sprintData[i];\n      // Calculez le nombre de tickets terminés dans ce sprint\n      var sprintEffort = 0;\n      for (var j = 0; j < ticketData.length; j++) {\n        var ticket = ticketData[j];\n        if (ticket.idSprint === sprint.id && ticket.etat === 'done') {\n          sprintEffort += ticket.effort;\n        }\n      }\n      // Ajoutez le sprint à la liste des étiquettes de l'axe X\n      labels.push(sprint.dateFin.toDateString());\n      // Ajoutez le nombre total d'efforts pour ce sprint à la liste des données à tracer\n      totalEffort += sprintEffort;\n      data.push(totalEffort);\n      // Si ce n'est pas le dernier sprint, mettez à jour la date de fin du sprint suivant\n      if (i < sprintData.length - 1) {\n        sprintData[i + 1].dateLancement = sprint.dateFin;\n      }\n    }\n    // Tracez le graphique en utilisant Chart.js\n    var myChart = new Chart(this.ctx, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Effort total',\n          data: data,\n          borderColor: 'rgb(75, 192, 192)',\n          fill: false\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Burn-up chart'\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Dates'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Effort'\n            }\n          }]\n        }\n      }\n    });\n  };\n  CourbesComponent.ɵfac = function CourbesComponent_Factory(t) {\n    return new (t || CourbesComponent)(i0.ɵɵdirectiveInject(i1.SprintService), i0.ɵɵdirectiveInject(i2.ProductBacklogService), i0.ɵɵdirectiveInject(i3.HistoireTicketService));\n  };\n  CourbesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourbesComponent,\n    selectors: [[\"app-courbes\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"chart-container\"], [\"id\", \"myChart\"]],\n    template: function CourbesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"canvas\", 1);\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return CourbesComponent;\n}();\nexport { CourbesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}