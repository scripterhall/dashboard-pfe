{"ast":null,"code":"import { __values } from \"tslib\";\nimport { ElementRef } from '@angular/core';\nimport { HistoireTicketService } from 'src/app/service/histoire-ticket.service';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sprint.service\";\nimport * as i2 from \"src/app/service/product-backlog.service\";\nimport * as i3 from \"src/app/service/histoire-ticket.service\";\nvar _c0 = [\"myChart\"];\nvar CourbesComponent = /** @class */function () {\n  function CourbesComponent(sprintService, productBacklogservice, histoireTicketService) {\n    this.sprintService = sprintService;\n    this.productBacklogservice = productBacklogservice;\n    this.histoireTicketService = histoireTicketService;\n    this.tickets = [];\n  }\n  CourbesComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    //Pour la deuxième courbe\n    this.histoireTicketService.getListHistoireTicketByProductBacklog(this.productBacklogservice.getProductBacklogByIdFromLocalStorage()).subscribe(function (data) {\n      _this.tickets = data;\n      console.log(_this.tickets);\n    }, function (error) {\n      console.log(error);\n    });\n    this.sprintService.getListSprintsByProductBacklog(this.productBacklogservice.getProductBacklogByIdFromLocalStorage()).subscribe(function (data) {\n      if (data.length > 0) {\n        _this.sprintsProjet = data;\n        console.log(_this.sprintsProjet);\n      } else {\n        console.log('Pas de sprints !');\n      }\n      var myChart = new Chart(_this.myChart.nativeElement.getContext('2d'), {\n        type: 'line',\n        data: _this.getChartData(),\n        options: _this.getChartOptions()\n      });\n    }, function (error) {\n      console.log(error);\n    });\n  };\n  //Pour la deuxième courbe\n  CourbesComponent.prototype.getChartData = function () {\n    var labels = this.sprintsProjet.map(function (sprint) {\n      return 'sp' + sprint.id;\n    });\n    var data = {\n      labels: labels,\n      datasets: [{\n        label: 'Effort terminé',\n        data: this.getScopeCreepData(),\n        fill: false,\n        borderColor: 'red'\n      }, {\n        label: 'Effort planifié',\n        data: this.getEffortPlanifieData(),\n        fill: false,\n        borderColor: 'green'\n      }]\n    };\n    return data;\n  };\n  CourbesComponent.prototype.getScopeCreepData = function () {\n    var e_1, _a;\n    var scopeCreepData = [];\n    var scopeCreepTotal = 0;\n    var _loop_1 = function (sprint) {\n      var userStoriesInSprint = this_1.tickets.filter(function (us) {\n        return us.sprintId === sprint.id;\n      });\n      var scopeCreepInSprint = userStoriesInSprint.reduce(function (acc, us) {\n        return acc + us.effort * (us.status === 'TERMINE' ? 1 : 0);\n      }, 0);\n      scopeCreepTotal = scopeCreepTotal + scopeCreepInSprint;\n      scopeCreepData.push(scopeCreepTotal);\n    };\n    var this_1 = this;\n    try {\n      for (var _b = __values(this.sprintsProjet), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var sprint = _c.value;\n        _loop_1(sprint);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return scopeCreepData;\n  };\n  CourbesComponent.prototype.getEffortPlanifieData = function () {\n    var e_2, _a;\n    if (this.sprintsProjet && this.sprintsProjet.length > 0) {\n      var effortPlanifieData = [];\n      var effortPlanifieTotal = 0;\n      try {\n        for (var _b = __values(this.sprintsProjet), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var sprint = _c.value;\n          effortPlanifieTotal += sprint.velocite;\n          effortPlanifieData.push(effortPlanifieTotal);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n      return effortPlanifieData;\n    }\n  };\n  CourbesComponent.prototype.getChartOptions = function () {\n    return {\n      responsive: true,\n      title: {\n        display: true,\n        text: 'Burn-up chart'\n      },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Sprints'\n          }\n        }],\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Efforts (en points )'\n          },\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    };\n  };\n  CourbesComponent.ɵfac = function CourbesComponent_Factory(t) {\n    return new (t || CourbesComponent)(i0.ɵɵdirectiveInject(i1.SprintService), i0.ɵɵdirectiveInject(i2.ProductBacklogService), i0.ɵɵdirectiveInject(i3.HistoireTicketService));\n  };\n  CourbesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourbesComponent,\n    selectors: [[\"app-courbes\"]],\n    viewQuery: function CourbesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        var _t = void 0;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myChart = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 0,\n    consts: [[2, \"position\", \"relative\", \"top\", \"30px\"], [\"myChart\", \"\"]],\n    template: function CourbesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n        i0.ɵɵelement(2, \"canvas\", null, 1);\n        i0.ɵɵelementEnd()();\n      }\n    }\n  });\n  return CourbesComponent;\n}();\nexport { CourbesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}