{"ast":null,"code":"import Chart from 'chart.js';\nimport { HistoireTicketService } from 'src/app/service/histoire-ticket.service';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/sprint.service\";\nimport * as i2 from \"src/app/service/product-backlog.service\";\nimport * as i3 from \"src/app/service/histoire-ticket.service\";\nvar CourbesComponent = /** @class */function () {\n  function CourbesComponent(sprintService, productBacklogService, histoireTicketService) {\n    this.sprintService = sprintService;\n    this.productBacklogService = productBacklogService;\n    this.histoireTicketService = histoireTicketService;\n  }\n  CourbesComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.service.getListSprintsByProductBacklog(1).subscribe(function (sprints) {\n      sprints.forEach(function (sprint) {\n        _this.service.getHistoireTicketBySprintId(sprint.id).subscribe(function (tickets) {\n          _this.generateBurnDownChart(sprint, tickets);\n        });\n      });\n    });\n  };\n  CourbesComponent.prototype.generateBurnDownChart = function (sprint, tickets) {\n    var chart = new Chart(\"burn-down-chart-\".concat(sprint.id), {\n      type: 'line',\n      data: {\n        labels: this.getLabels(sprint.dateLancement, sprint.dateFin),\n        datasets: [{\n          label: 'Effort réel',\n          data: this.getEffortReel(sprint, tickets),\n          borderColor: '#FF6384',\n          fill: false\n        }, {\n          label: 'Effort estimé',\n          data: this.getEffortEstime(sprint),\n          borderColor: '#36A2EB',\n          fill: false\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: \"Burn Down Chart - Sprint \".concat(sprint.id)\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Jours du sprint'\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: 'Effort'\n            }\n          }]\n        }\n      }\n    });\n  };\n  CourbesComponent.prototype.getLabels = function (dateLancement, dateFin) {\n    var labels = [];\n    var currentDate = new Date(dateLancement);\n    while (currentDate <= dateFin) {\n      labels.push(currentDate.toLocaleDateString());\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return labels;\n  };\n  CourbesComponent.prototype.getEffortReel = function (sprint, tickets) {\n    var effortReel = [];\n    var currentDate = new Date(sprint.dateLancement);\n    var effortTotal = 0;\n    var _loop_1 = function () {\n      var effortJournalier = 0;\n      tickets.filter(function (t) {\n        return t.dateFin <= currentDate;\n      }).forEach(function (t) {\n        return effortJournalier += t.effort;\n      });\n      effortTotal += effortJournalier;\n      effortReel.push(effortTotal);\n      currentDate.setDate(currentDate.getDate() + 1);\n    };\n    while (currentDate <= sprint.dateFin) {\n      _loop_1();\n    }\n    return effortReel;\n  };\n  CourbesComponent.prototype.getEffortEstime = function (sprint) {\n    var effortEstime = [];\n    var currentDate = new Date(sprint.dateLancement);\n    var effortTotal = sprint.velocite;\n    while (currentDate <= sprint.dateFin) {\n      effortEstime.push(effortTotal);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n  };\n  CourbesComponent.ɵfac = function CourbesComponent_Factory(t) {\n    return new (t || CourbesComponent)(i0.ɵɵdirectiveInject(i1.SprintService), i0.ɵɵdirectiveInject(i2.ProductBacklogService), i0.ɵɵdirectiveInject(i3.HistoireTicketService));\n  };\n  CourbesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourbesComponent,\n    selectors: [[\"app-courbes\"]],\n    decls: 0,\n    vars: 0,\n    template: function CourbesComponent_Template(rf, ctx) {}\n  });\n  return CourbesComponent;\n}();\nexport { CourbesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}